#!/usr/bin/env python3
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Ç–µ—Å—Ç–æ–≤—ã—Ö –¥–∞–Ω–Ω—ã—Ö —á–µ—Ä–µ–∑ API
"""

import requests
import json

BASE_URL = "http://localhost:8000/api"

def check_api():
    """–ü—Ä–æ–≤–µ—Ä—è–µ—Ç API –∏ –ø–æ–∫–∞–∑—ã–≤–∞–µ—Ç —Ç–µ—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ"""
    
    print("üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ç–µ—Å—Ç–æ–≤—ã—Ö –¥–∞–Ω–Ω—ã—Ö...")
    print("=" * 50)
    
    try:
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–∞–Ω–¥–∏–¥–∞—Ç–æ–≤
        print("üìã –°–ø–∏—Å–æ–∫ –∫–∞–Ω–¥–∏–¥–∞—Ç–æ–≤:")
        response = requests.get(f"{BASE_URL}/candidates/")
        if response.status_code == 200:
            candidates = response.json()
            print(f"‚úÖ –ù–∞–π–¥–µ–Ω–æ {len(candidates)} –∫–∞–Ω–¥–∏–¥–∞—Ç–æ–≤")
            
            # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –ø–æ —Å—Ç–∞—Ç—É—Å–∞–º
            statuses = {}
            for candidate in candidates:
                status = candidate['status']
                statuses[status] = statuses.get(status, 0) + 1
            
            print("\nüìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø–æ —Å—Ç–∞—Ç—É—Å–∞–º:")
            for status, count in statuses.items():
                print(f"  ‚Ä¢ {status}: {count} –∫–∞–Ω–¥–∏–¥–∞—Ç–æ–≤")
            
            # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø–µ—Ä–≤—ã—Ö 3 –∫–∞–Ω–¥–∏–¥–∞—Ç–æ–≤
            print("\nüë• –ü–µ—Ä–≤—ã–µ 3 –∫–∞–Ω–¥–∏–¥–∞—Ç–∞:")
            for i, candidate in enumerate(candidates[:3]):
                print(f"  {i+1}. {candidate['full_name']} (@{candidate['telegram_username']}) - {candidate['status']}")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∏–Ω—Ç–µ—Ä–≤—å—é –ª–æ–≥–∏ –¥–ª—è –ø–µ—Ä–≤–æ–≥–æ –∫–∞–Ω–¥–∏–¥–∞—Ç–∞
        if candidates:
            first_candidate_id = candidates[0]['id']
            print(f"\nüìù –ò–Ω—Ç–µ—Ä–≤—å—é –ª–æ–≥–∏ –¥–ª—è –∫–∞–Ω–¥–∏–¥–∞—Ç–∞ ID {first_candidate_id}:")
            response = requests.get(f"{BASE_URL}/candidates/{first_candidate_id}/interview-logs/")
            if response.status_code == 200:
                logs = response.json()
                print(f"‚úÖ –ù–∞–π–¥–µ–Ω–æ {len(logs)} –∑–∞–ø–∏—Å–µ–π –∏–Ω—Ç–µ—Ä–≤—å—é")
                for log in logs[:2]:  # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø–µ—Ä–≤—ã–µ 2 –∑–∞–ø–∏—Å–∏
                    print(f"  ‚Ä¢ –í–æ–ø—Ä–æ—Å: {log['question']}")
                    print(f"    –û—Ç–≤–µ—Ç: {log['answer'][:50]}...")
                    print(f"    –û—Ü–µ–Ω–∫–∞: {log['score']}/10")
            else:
                print("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –ª–æ–≥–∏ –∏–Ω—Ç–µ—Ä–≤—å—é")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–∏
        print(f"\nüí¨ –ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–∏ HR –¥–ª—è –∫–∞–Ω–¥–∏–¥–∞—Ç–∞ ID {first_candidate_id}:")
        response = requests.get(f"{BASE_URL}/candidates/{first_candidate_id}/comments/")
        if response.status_code == 200:
            comments = response.json()
            print(f"‚úÖ –ù–∞–π–¥–µ–Ω–æ {len(comments)} –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–µ–≤")
            for comment in comments:
                print(f"  ‚Ä¢ {comment['hr_comment']}")
        else:
            print("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–∏")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –º–µ—Ç—Ä–∏–∫–∏
        print("\nüìà –ú–µ—Ç—Ä–∏–∫–∏:")
        response = requests.get(f"{BASE_URL}/metrics/")
        if response.status_code == 200:
            metrics = response.json()
            print(f"‚úÖ –û–±—â–µ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∫–∞–Ω–¥–∏–¥–∞—Ç–æ–≤: {metrics.get('total_candidates', 'N/A')}")
            print(f"‚úÖ –ê–∫—Ç–∏–≤–Ω—ã—Ö –∫–∞–Ω–¥–∏–¥–∞—Ç–æ–≤: {metrics.get('active_candidates', 'N/A')}")
            print(f"‚úÖ –ü—Ä–æ—Ü–µ–Ω—Ç –ø—Ä–æ—Ö–æ–∂–¥–µ–Ω–∏—è —Ç–µ—Å—Ç–æ–≤: {metrics.get('test_pass_rate', 'N/A')}%")
        else:
            print("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –º–µ—Ç—Ä–∏–∫–∏")
        
        print("\n" + "=" * 50)
        print("üéâ –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞! –í—Å–µ —Ç–µ—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ –¥–æ—Å—Ç—É–ø–Ω—ã.")
        print("\nüåê –î–æ—Å—Ç—É–ø–Ω—ã–µ URL:")
        print(f"  ‚Ä¢ Frontend: http://localhost:3000")
        print(f"  ‚Ä¢ API Docs: http://localhost:8000/docs")
        print(f"  ‚Ä¢ API Base: http://localhost:8000/api/")
        
    except requests.exceptions.ConnectionError:
        print("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–¥–∫–ª—é—á–∏—Ç—å—Å—è –∫ API. –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ —Å–µ—Ä–≤–µ—Ä –∑–∞–ø—É—â–µ–Ω.")
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ: {e}")

if __name__ == "__main__":
    check_api() 