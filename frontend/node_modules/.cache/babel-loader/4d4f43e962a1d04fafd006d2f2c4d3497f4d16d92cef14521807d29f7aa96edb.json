{"ast":null,"code":"import { is as y, looseObject as u, function as N, boolean as A, nullish as b, number as C, string as m, optional as q, unknown as te, parse as P, pipe as G, any as re } from \"valibot\";\nimport { AbortablePromise as D } from \"better-promises\";\nimport { AbortablePromise as et, CancelledError as tt, ManualPromise as rt, TimeoutError as nt, isCancelledError as ot, isTimeoutError as at } from \"better-promises\";\nimport { createLogger as ne, createCbCollector as oe, getStorageValue as ae, setStorageValue as J, deepSnakeToCamelObjKeys as se } from \"@telegram-apps/toolkit\";\nimport { createLogger as ct } from \"@telegram-apps/toolkit\";\nimport { themeParams as ce, jsonParse as O, MiniAppsMessageSchema as B, isLaunchParamsQuery as Q, parseLaunchParamsQuery as S, serializeLaunchParamsQuery as ie } from \"@telegram-apps/transformers\";\nimport pe from \"mitt\";\nimport { signal as k } from \"@telegram-apps/signals\";\nimport { errorClass as d, errorClassWithData as _e } from \"error-kid\";\nfunction F(e) {\n  return btoa(encodeURIComponent(e).replace(/%([0-9A-F]{2})/g, (t, r) => String.fromCharCode(parseInt(`0x${r}`)))).replace(/\\+/g, \"-\").replace(/\\//g, \"_\");\n}\nfunction ue(e) {\n  return decodeURIComponent(atob(e).replace(/-/g, \"+\").replace(/_/g, \"/\").split(\"\").map(t => \"%\" + (\"00\" + t.charCodeAt(0).toString(16)).slice(-2)).join(\"\"));\n}\nfunction H(e) {\n  return y(u({\n    TelegramWebviewProxy: u({\n      postEvent: N()\n    })\n  }), e);\n}\nfunction K() {\n  try {\n    return window.self !== window.top;\n  } catch {\n    return !0;\n  }\n}\nfunction le(e, t) {\n  const r = /* @__PURE__ */new Map(),\n    n = pe(),\n    a = (o, s, c) => {\n      c || (c = !1);\n      const i = r.get(o) || /* @__PURE__ */new Map();\n      r.set(o, i);\n      const _ = i.get(s) || [];\n      i.set(s, _);\n      const l = _.findIndex(w => w[1] === c);\n      if (l >= 0 && (n.off(o, _[l][0]), _.splice(l, 1), !_.length && (i.delete(s), !i.size))) {\n        const w = r.size;\n        r.delete(o), w && !r.size && t();\n      }\n    };\n  return [function (s, c, i) {\n    !r.size && e();\n    const _ = () => {\n        a(s, c, i);\n      },\n      l = function () {\n        for (var _len = arguments.length, M = new Array(_len), _key = 0; _key < _len; _key++) {\n          M[_key] = arguments[_key];\n        }\n        i && _(), s === \"*\" ? c(M) : c(...M);\n      };\n    n.on(s, l);\n    const w = r.get(s) || /* @__PURE__ */new Map();\n    r.set(s, w);\n    const T = w.get(c) || [];\n    return w.set(c, T), T.push([l, i || !1]), _;\n  }, a,\n  // eslint-disable-next-line @typescript-eslint/unbound-method\n  n.emit, function () {\n    const s = r.size;\n    n.all.clear(), r.clear(), s && t();\n  }];\n}\nfunction v(e, t) {\n  window.dispatchEvent(new MessageEvent(\"message\", {\n    data: JSON.stringify({\n      eventType: e,\n      eventData: t\n    }),\n    // We specify window.parent to imitate the case, the parent iframe sent us this event.\n    source: window.parent\n  }));\n}\nlet h = !1;\nconst L = e => {\n  f().log(\"Event received:\", e);\n};\nfunction fe(e) {\n  e !== h && (h = e, h ? X(\"*\", L) : me(\"*\", L));\n}\nconst f = k(ne(\"Bridge\", {\n  bgColor: \"#9147ff\",\n  textColor: \"white\",\n  shouldLog() {\n    return h;\n  }\n}));\nfunction Y(e, t, r, n) {\n  Object.defineProperty(e, t, {\n    enumerable: !0,\n    configurable: !0,\n    get: r,\n    set: n\n  });\n}\nfunction W(e, t) {\n  const r = e[t];\n  Y(e, t, () => r, n => {\n    Object.entries(n).forEach(_ref => {\n      let [a, o] = _ref;\n      r[a] = o;\n    });\n  });\n}\nfunction U(e, t, r) {\n  Object.defineProperty(e, t, {\n    enumerable: !0,\n    configurable: !0,\n    writable: !0,\n    value: r\n  });\n}\nfunction E(e, t, r) {\n  const n = e[t],\n    a = [r];\n  typeof n == \"function\" && a.push(n);\n  const o = function () {\n      for (var _len2 = arguments.length, c = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n        c[_key2] = arguments[_key2];\n      }\n      a.forEach(i => {\n        i(...c);\n      });\n    },\n    s = Object.assign(function () {\n      o(...arguments);\n    }, {\n      // Unwraps the composer.\n      unwrap() {\n        const {\n          length: c\n        } = a;\n        if (c === 1) {\n          delete e[t];\n          return;\n        }\n        if (c === 2) {\n          U(e, t, a[1]);\n          return;\n        }\n        a.unshift(1), U(e, t, o);\n      }\n    });\n  Y(e, t, () => s, c => {\n    a.push(c);\n  });\n}\nconst we = {\n  clipboard_text_received: u({\n    req_id: m(),\n    data: b(m())\n  }),\n  custom_method_invoked: u({\n    req_id: m(),\n    result: q(te()),\n    error: q(m())\n  }),\n  popup_closed: b(u({\n    button_id: b(m(), () => {})\n  }), {}),\n  viewport_changed: u({\n    height: C(),\n    width: b(C(), () => window.innerWidth),\n    is_state_stable: A(),\n    is_expanded: A()\n  }),\n  theme_changed: u({\n    theme_params: ce()\n  })\n};\nfunction I(e) {\n  if (e.source !== window.parent) return;\n  let t;\n  try {\n    t = P(G(m(), O(), B), e.data);\n  } catch {\n    return;\n  }\n  const {\n      eventType: r,\n      eventData: n\n    } = t,\n    a = we[r];\n  let o;\n  try {\n    o = a ? P(a, n) : n;\n  } catch (s) {\n    return f().forceError([`An error occurred processing the \"${r}\" event from the Telegram application.`, \"Please, file an issue here:\", \"https://github.com/Telegram-Mini-Apps/telegram-apps/issues/new/choose\"].join(`\n`), t, s);\n  }\n  ge(r, o);\n}\nconst [X, me, ge, de] = le(() => {\n    const e = window;\n    !e.TelegramGameProxy && (e.TelegramGameProxy = {}), E(e.TelegramGameProxy, \"receiveEvent\", v), W(e, \"TelegramGameProxy\"), !e.Telegram && (e.Telegram = {}), !e.Telegram.WebView && (e.Telegram.WebView = {}), E(e.Telegram.WebView, \"receiveEvent\", v), W(e.Telegram, \"WebView\"), E(e, \"TelegramGameProxy_receiveEvent\", v), window.addEventListener(\"message\", I);\n  }, () => {\n    [[\"TelegramGameProxy_receiveEvent\"], [\"TelegramGameProxy\", \"receiveEvent\"], [\"Telegram\", \"WebView\", \"receiveEvent\"]].forEach(e => {\n      const t = window;\n      let r = [void 0, t];\n      for (const o of e) if (r = [r[1], r[1][o]], !r[1]) return;\n      const [n, a] = r;\n      \"unwrap\" in a && (a.unwrap(), n && n !== t && !Object.keys(n).length && delete t[e[0]]);\n    }), window.removeEventListener(\"message\", I);\n  }),\n  [be, Ie] = d(\"MethodUnsupportedError\", (e, t) => [`Method \"${e}\" is unsupported in Mini Apps version ${t}`]),\n  [he, Re] = d(\"MethodParameterUnsupportedError\", (e, t, r) => [`Parameter \"${t}\" of \"${e}\" method is unsupported in Mini Apps version ${r}`]),\n  [ye, je] = _e(\"LaunchParamsRetrieveError\", e => ({\n    errors: e\n  }), e => [[\"Unable to retrieve launch parameters from any known source. Perhaps, you have opened your app outside Telegram?\", \"ðŸ“– Refer to docs for more information:\", \"https://docs.telegram-mini-apps.com/packages/telegram-apps-bridge/environment\", \"\", \"Collected errors:\", ...e.map(_ref2 => {\n    let [t, r] = _ref2;\n    return `Source: ${t} / ${r instanceof Error ? r.message : String(r)}`;\n  })].join(`\n`)]),\n  [ve, $e] = d(\"InvalidLaunchParamsError\", (e, t) => [`Invalid value for launch params: ${e}`, {\n    cause: t\n  }]),\n  [Ee, ze] = d(\"UnknownEnvError\"),\n  [Pe, Ne] = d(\"InvokeCustomMethodError\", e => [`Server returned error: ${e}`]),\n  g = k(function () {\n    try {\n      window.parent.postMessage(...arguments);\n    } catch (t) {\n      t instanceof SyntaxError ? f().forceError(\"Unable to call window.parent.postMessage due to incorrectly configured target origin. Use the setTargetOrigin method to allow this origin to receive events\", t) : f().forceError(t);\n    }\n  }),\n  Se = function () {\n    return g()(...arguments);\n  },\n  x = k(\"https://web.telegram.org\");\nfunction Ge(e) {\n  x.set(e), f().log(\"New target origin set\", e);\n}\nfunction Z(e, t) {\n  f().log(\"Posting event:\", t ? {\n    eventType: e,\n    eventData: t\n  } : {\n    eventType: e\n  });\n  const r = window,\n    n = JSON.stringify({\n      eventType: e,\n      eventData: t\n    });\n  if (K()) return Se(n, x());\n  if (H(r)) {\n    r.TelegramWebviewProxy.postEvent(e, JSON.stringify(t));\n    return;\n  }\n  if (y(u({\n    external: u({\n      notify: N()\n    })\n  }), r)) {\n    r.external.notify(n);\n    return;\n  }\n  throw new Ee();\n}\nfunction V(e, t, r) {\n  r || (r = {});\n  const {\n      capture: n\n    } = r,\n    [a, o] = oe();\n  return new D(s => {\n    (Array.isArray(t) ? t : [t]).forEach(c => {\n      a(X(c, i => {\n        (!n || (Array.isArray(t) ? n({\n          event: c,\n          payload: i\n        }) : n(i))) && s(i);\n      }));\n    }), (r.postEvent || Z)(e, r.params);\n  }, r).finally(o);\n}\nconst R = \"launchParams\";\nfunction j(e) {\n  return e.replace(/^[^?#]*[?#]/, \"\").replace(/[?#]/g, \"&\");\n}\nfunction ee() {\n  const e = [];\n  for (const [t, r] of [\n  // Try to retrieve launch parameters from the current location. This method can return\n  // nothing in case, location was changed, and then the page was reloaded.\n  [() => j(window.location.href), \"window.location.href\"],\n  // Then, try using the lower level API - window.performance.\n  [() => {\n    const n = performance.getEntriesByType(\"navigation\")[0];\n    return n && j(n.name);\n  }, \"performance navigation entries\"], [() => ae(R), \"local storage\"]]) {\n    const n = t();\n    if (!n) {\n      e.push([r, new Error(\"Source is empty\")]);\n      continue;\n    }\n    if (Q(n)) return J(R, n), n;\n    try {\n      S(n);\n    } catch (a) {\n      e.push([r, a]);\n    }\n  }\n  throw new ye(e);\n}\nfunction ke(e) {\n  const t = S(ee());\n  return e ? se(t) : t;\n}\nfunction De(e, t) {\n  if (!e) try {\n    return ke(), !0;\n  } catch {\n    return !1;\n  }\n  return D.fn(async r => {\n    if (H(window)) return !0;\n    try {\n      return await V(\"web_app_request_theme\", \"theme_changed\", r), !0;\n    } catch {\n      return !1;\n    }\n  }, t || {\n    timeout: 100\n  });\n}\nfunction Je() {\n  let {\n    launchParams: e,\n    onEvent: t,\n    resetPostMessage: r\n  } = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  if (e) {\n    const o = typeof e == \"string\" || e instanceof URLSearchParams ? e.toString() :\n    // Here we have to trick serializeLaunchParamsQuery into thinking, it serializes a valid\n    // value. We are doing it because we are working with tgWebAppData presented as a\n    // string, not an object as serializeLaunchParamsQuery requires.\n    ie({\n      ...e,\n      tgWebAppData: void 0\n    }) + (e.tgWebAppData ? `&tgWebAppData=${encodeURIComponent(e.tgWebAppData.toString())}` : \"\");\n    if (!Q(o)) try {\n      S(o);\n    } catch (s) {\n      throw new ve(o, s);\n    }\n    J(\"launchParams\", o);\n  }\n  if (K()) {\n    if (!t) return;\n    const o = G(m(), O(), B);\n    r && g.reset();\n    const s = g();\n    g.set(function () {\n      for (var _len3 = arguments.length, c = new Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {\n        c[_key3] = arguments[_key3];\n      }\n      const [i] = c,\n        _ = () => {\n          s(...c);\n        };\n      if (y(o, i)) {\n        const l = P(o, i);\n        t([l.eventType, l.eventData], _);\n      } else _();\n    });\n    return;\n  }\n  const n = window.TelegramWebviewProxy || {},\n    a = n.postEvent || (() => {});\n  window.TelegramWebviewProxy = {\n    ...n,\n    postEvent(o, s) {\n      const c = () => {\n        a(o, s);\n      };\n      t ? t([o, s ? JSON.parse(s) : void 0], c) : c();\n    }\n  }, f().log(\"Environment was mocked by the mockTelegramEnv function\");\n}\nfunction Oe() {\n  return new URLSearchParams(ee()).get(\"tgWebAppData\") || void 0;\n}\nfunction xe(e) {\n  return _ref3 => {\n    let {\n      req_id: t\n    } = _ref3;\n    return t === e;\n  };\n}\nfunction $(e) {\n  return e.split(\".\").map(Number);\n}\nfunction Te(e, t) {\n  const r = $(e),\n    n = $(t),\n    a = Math.max(r.length, n.length);\n  for (let o = 0; o < a; o += 1) {\n    const s = r[o] || 0,\n      c = n[o] || 0;\n    if (s !== c) return s > c ? 1 : -1;\n  }\n  return 0;\n}\nfunction p(e, t) {\n  return Te(e, t) <= 0;\n}\nfunction z(e, t, r) {\n  if (typeof r == \"string\") {\n    if (e === \"web_app_open_link\") {\n      if (t === \"try_instant_view\") return p(\"6.4\", r);\n      if (t === \"try_browser\") return p(\"7.6\", r);\n    }\n    if (e === \"web_app_set_header_color\" && t === \"color\") return p(\"6.9\", r);\n    if (e === \"web_app_close\" && t === \"return_back\") return p(\"7.6\", r);\n    if (e === \"web_app_setup_main_button\" && t === \"has_shine_effect\") return p(\"7.10\", r);\n  }\n  switch (e) {\n    case \"web_app_open_tg_link\":\n    case \"web_app_open_invoice\":\n    case \"web_app_setup_back_button\":\n    case \"web_app_set_background_color\":\n    case \"web_app_set_header_color\":\n    case \"web_app_trigger_haptic_feedback\":\n      return p(\"6.1\", t);\n    case \"web_app_open_popup\":\n      return p(\"6.2\", t);\n    case \"web_app_close_scan_qr_popup\":\n    case \"web_app_open_scan_qr_popup\":\n    case \"web_app_read_text_from_clipboard\":\n      return p(\"6.4\", t);\n    case \"web_app_switch_inline_query\":\n      return p(\"6.7\", t);\n    case \"web_app_invoke_custom_method\":\n    case \"web_app_request_write_access\":\n    case \"web_app_request_phone\":\n      return p(\"6.9\", t);\n    case \"web_app_setup_settings_button\":\n      return p(\"6.10\", t);\n    case \"web_app_biometry_get_info\":\n    case \"web_app_biometry_open_settings\":\n    case \"web_app_biometry_request_access\":\n    case \"web_app_biometry_request_auth\":\n    case \"web_app_biometry_update_token\":\n      return p(\"7.2\", t);\n    case \"web_app_setup_swipe_behavior\":\n      return p(\"7.7\", t);\n    case \"web_app_share_to_story\":\n      return p(\"7.8\", t);\n    case \"web_app_setup_secondary_button\":\n    case \"web_app_set_bottom_bar_color\":\n      return p(\"7.10\", t);\n    case \"web_app_request_safe_area\":\n    case \"web_app_request_content_safe_area\":\n    case \"web_app_request_fullscreen\":\n    case \"web_app_exit_fullscreen\":\n    case \"web_app_set_emoji_status\":\n    case \"web_app_add_to_home_screen\":\n    case \"web_app_check_home_screen\":\n    case \"web_app_request_emoji_status_access\":\n    case \"web_app_check_location\":\n    case \"web_app_open_location_settings\":\n    case \"web_app_request_file_download\":\n    case \"web_app_request_location\":\n    case \"web_app_send_prepared_message\":\n    case \"web_app_start_accelerometer\":\n    case \"web_app_start_device_orientation\":\n    case \"web_app_start_gyroscope\":\n    case \"web_app_stop_accelerometer\":\n    case \"web_app_stop_device_orientation\":\n    case \"web_app_stop_gyroscope\":\n    case \"web_app_toggle_orientation_lock\":\n      return p(\"8.0\", t);\n    default:\n      return [\"iframe_ready\", \"iframe_will_reload\", \"web_app_close\", \"web_app_data_send\", \"web_app_expand\", \"web_app_open_link\", \"web_app_ready\", \"web_app_request_theme\", \"web_app_request_viewport\", \"web_app_setup_main_button\", \"web_app_setup_closing_behavior\"].includes(e);\n  }\n}\nfunction Be(e, t) {\n  t || (t = \"strict\");\n  const r = typeof t == \"function\" ? t : n => {\n    const {\n        method: a,\n        version: o\n      } = n,\n      s = \"param\" in n ? new he(a, n.param, o) : new be(a, o);\n    if (t === \"strict\") throw s;\n    return f().forceWarn(s.message);\n  };\n  return (n, a) => z(n, e) ? n === \"web_app_set_header_color\" && y(u({\n    color: re()\n  }), a) && !z(n, \"color\", e) ? r({\n    version: e,\n    method: n,\n    param: \"color\"\n  }) : Z(n, a) : r({\n    version: e,\n    method: n\n  });\n}\nfunction Qe(e) {\n  const t = F(typeof e == \"string\" ? e : JSON.stringify(e));\n  if (t.length > 512) throw new Error(\"Value is too long for start parameter\");\n  return t;\n}\nfunction Fe(e, t) {\n  const r = ue(e);\n  return t === \"json\" ? JSON.parse(r) : t ? t(r) : r;\n}\nfunction He(e) {\n  return F(e).length <= 512;\n}\nfunction Ke(e, t, r, n) {\n  return V(\"web_app_invoke_custom_method\", \"custom_method_invoked\", {\n    ...(n || {}),\n    params: {\n      method: e,\n      params: t,\n      req_id: r\n    },\n    capture: xe(r)\n  }).then(_ref4 => {\n    let {\n      result: a,\n      error: o\n    } = _ref4;\n    if (o) throw new Pe(o);\n    return a;\n  });\n}\nfunction Ye() {\n  Object.hasOwn || (Object.hasOwn = function (e, t) {\n    return Object.prototype.hasOwnProperty.call(e, t);\n  });\n}\nfunction Xe() {\n  de(), fe(!1), [g, x].forEach(e => {\n    e.unsubAll(), e.reset();\n  });\n}\nexport { et as AbortablePromise, tt as CancelledError, ve as InvalidLaunchParamsError, Pe as InvokeCustomMethodError, ye as LaunchParamsRetrieveError, rt as ManualPromise, he as MethodParameterUnsupportedError, be as MethodUnsupportedError, nt as TimeoutError, Ee as UnknownEnvError, Ye as applyPolyfills, xe as captureSameReq, Te as compareVersions, ct as createLogger, Be as createPostEvent, Qe as createStartParam, ue as decodeBase64Url, Fe as decodeStartParam, v as emitEvent, F as encodeBase64Url, H as hasWebviewProxy, Ke as invokeCustomMethod, ot as isCancelledError, K as isIframe, $e as isInvalidLaunchParamsError, Ne as isInvokeCustomMethodError, je as isLaunchParamsRetrieveError, Re as isMethodMethodParameterUnsupportedError, Ie as isMethodUnsupportedError, He as isSafeToCreateStartParam, De as isTMA, at as isTimeoutError, ze as isUnknownEnvError, f as logger, Je as mockTelegramEnv, me as off, de as offAll, X as on, Z as postEvent, Se as postMessage, g as postMessageImplementation, V as request, Xe as resetPackageState, ke as retrieveLaunchParams, Oe as retrieveRawInitData, ee as retrieveRawLaunchParams, fe as setDebug, Ge as setTargetOrigin, z as supports, x as targetOrigin };","map":{"version":3,"names":["F","e","btoa","encodeURIComponent","replace","t","r","String","fromCharCode","parseInt","ue","decodeURIComponent","atob","split","map","charCodeAt","toString","slice","join","H","y","u","TelegramWebviewProxy","postEvent","N","K","window","self","top","le","Map","n","pe","a","off","o","s","c","i","get","set","_","l","findIndex","w","splice","length","delete","size","cleanup","internalHandler","_len","arguments","M","Array","_key","on","T","push","emit","all","clear","v","dispatchEvent","MessageEvent","data","JSON","stringify","eventType","eventData","source","parent","h","L","f","log","fe","X","me","k","ne","bgColor","textColor","shouldLog","Y","Object","defineProperty","enumerable","configurable","W","entries","forEach","_ref","U","writable","value","E","callPool","_len2","_key2","assign","unwrap","unshift","we","clipboard_text_received","req_id","m","b","custom_method_invoked","result","q","te","error","popup_closed","button_id","viewport_changed","height","C","width","innerWidth","is_state_stable","A","is_expanded","theme_changed","theme_params","ce","I","P","G","O","B","forceError","ge","de","TelegramGameProxy","Telegram","WebView","addEventListener","keys","removeEventListener","be","Ie","d","he","Re","ye","je","_e","errors","_ref2","Error","message","ve","$e","cause","Ee","ze","Pe","Ne","g","postMessage","SyntaxError","Se","x","Ge","Z","external","notify","V","capture","oe","D","isArray","event","payload","params","finally","R","j","ee","location","href","performance","getEntriesByType","name","ae","Q","J","S","ke","se","De","fn","timeout","Je","launchParams","onEvent","resetPostMessage","undefined","URLSearchParams","ie","tgWebAppData","reset","_len3","_key3","next","parse","Oe","xe","_ref3","$","Number","Te","Math","max","p","z","includes","Be","method","version","param","forceWarn","color","re","Qe","Fe","He","Ke","then","_ref4","Ye","hasOwn","prototype","hasOwnProperty","call","Xe","unsubAll"],"sources":["/Users/antonver/aeon_admin_hr-1/frontend/node_modules/@telegram-apps/bridge/src/base64-url/encodeBase64Url.ts","/Users/antonver/aeon_admin_hr-1/frontend/node_modules/@telegram-apps/bridge/src/base64-url/decodeBase64Url.ts","/Users/antonver/aeon_admin_hr-1/frontend/node_modules/@telegram-apps/bridge/src/env/hasWebviewProxy.ts","/Users/antonver/aeon_admin_hr-1/frontend/node_modules/@telegram-apps/bridge/src/env/isIframe.ts","/Users/antonver/aeon_admin_hr-1/frontend/node_modules/@telegram-apps/bridge/src/events/createEmitter.ts","/Users/antonver/aeon_admin_hr-1/frontend/node_modules/@telegram-apps/bridge/src/events/emitEvent.ts","/Users/antonver/aeon_admin_hr-1/frontend/node_modules/@telegram-apps/bridge/src/debug.ts","/Users/antonver/aeon_admin_hr-1/frontend/node_modules/@telegram-apps/bridge/src/logger.ts","/Users/antonver/aeon_admin_hr-1/frontend/node_modules/@telegram-apps/bridge/src/helpers/defineWithAccessors.ts","/Users/antonver/aeon_admin_hr-1/frontend/node_modules/@telegram-apps/bridge/src/helpers/defineEnhanceableProperty.ts","/Users/antonver/aeon_admin_hr-1/frontend/node_modules/@telegram-apps/bridge/src/helpers/defineDefaultProperty.ts","/Users/antonver/aeon_admin_hr-1/frontend/node_modules/@telegram-apps/bridge/src/helpers/defineFnComposer.ts","/Users/antonver/aeon_admin_hr-1/frontend/node_modules/@telegram-apps/bridge/src/events/emitter.ts","/Users/antonver/aeon_admin_hr-1/frontend/node_modules/@telegram-apps/bridge/src/errors.ts","/Users/antonver/aeon_admin_hr-1/frontend/node_modules/@telegram-apps/bridge/src/methods/postMessage.ts","/Users/antonver/aeon_admin_hr-1/frontend/node_modules/@telegram-apps/bridge/src/methods/targetOrigin.ts","/Users/antonver/aeon_admin_hr-1/frontend/node_modules/@telegram-apps/bridge/src/methods/postEvent.ts","/Users/antonver/aeon_admin_hr-1/frontend/node_modules/@telegram-apps/bridge/src/utils/request.ts","/Users/antonver/aeon_admin_hr-1/frontend/node_modules/@telegram-apps/bridge/src/launch-params/retrieveRawLaunchParams.ts","/Users/antonver/aeon_admin_hr-1/frontend/node_modules/@telegram-apps/bridge/src/launch-params/retrieveLaunchParams.ts","/Users/antonver/aeon_admin_hr-1/frontend/node_modules/@telegram-apps/bridge/src/env/isTMA.ts","/Users/antonver/aeon_admin_hr-1/frontend/node_modules/@telegram-apps/bridge/src/env/mockTelegramEnv.ts","/Users/antonver/aeon_admin_hr-1/frontend/node_modules/@telegram-apps/bridge/src/launch-params/retrieveRawInitData.ts","/Users/antonver/aeon_admin_hr-1/frontend/node_modules/@telegram-apps/bridge/src/methods/captureSameReq.ts","/Users/antonver/aeon_admin_hr-1/frontend/node_modules/@telegram-apps/bridge/src/utils/compareVersions.ts","/Users/antonver/aeon_admin_hr-1/frontend/node_modules/@telegram-apps/bridge/src/methods/supports.ts","/Users/antonver/aeon_admin_hr-1/frontend/node_modules/@telegram-apps/bridge/src/methods/createPostEvent.ts","/Users/antonver/aeon_admin_hr-1/frontend/node_modules/@telegram-apps/bridge/src/start-param/createStartParam.ts","/Users/antonver/aeon_admin_hr-1/frontend/node_modules/@telegram-apps/bridge/src/start-param/decodeStartParam.ts","/Users/antonver/aeon_admin_hr-1/frontend/node_modules/@telegram-apps/bridge/src/start-param/isSafeToCreateStartParam.ts","/Users/antonver/aeon_admin_hr-1/frontend/node_modules/@telegram-apps/bridge/src/utils/invokeCustomMethod.ts","/Users/antonver/aeon_admin_hr-1/frontend/node_modules/@telegram-apps/bridge/src/applyPolyfills.ts","/Users/antonver/aeon_admin_hr-1/frontend/node_modules/@telegram-apps/bridge/src/resetPackageState.ts"],"sourcesContent":["/**\n * Creates a base-64-url encoded ASCII string from the passed value.\n * @param value - the value to encode.\n * @see Learn more about base64url:\n * https://herongyang.com/Encoding/Base64URL-Encoding-Algorithm.html\n * @see Source:\n * https://developer.mozilla.org/ru/docs/Glossary/Base64#solution_1_â€“_escaping_the_string_before_encoding_it\n */\nexport function encodeBase64Url(value: string): string {\n  // first we use encodeURIComponent to get percent-encoded UTF-8,\n  // then we convert the percent encodings into raw bytes which\n  // can be fed into btoa.\n  return btoa(\n    encodeURIComponent(value).replace(/%([0-9A-F]{2})/g, (_, p1) => {\n      return String.fromCharCode(parseInt(`0x${p1}`));\n    }),\n  )\n    .replace(/\\+/g, '-')\n    .replace(/\\//g, '_');\n}","/**\n * Decodes a base-64-url ASCII string.\n * @param value - the value to decode.\n * @throws {DOMException} If the passed value is an invalid base64url string.\n * @see Learn more about base64url:\n * https://herongyang.com/Encoding/Base64URL-Encoding-Algorithm.html\n * @see Source:\n * https://developer.mozilla.org/ru/docs/Glossary/Base64#solution_1_â€“_escaping_the_string_before_encoding_it\n */\nexport function decodeBase64Url(value: string): string {\n  return decodeURIComponent(\n    atob(value)\n      .replace(/-/g, '+')\n      .replace(/_/g, '/')\n      .split('')\n      .map((c) => '%' + ('00' + c.charCodeAt(0).toString(16)).slice(-2))\n      .join(''),\n  );\n}","import { looseObject, function as fn, is } from 'valibot';\n\n/**\n * Returns true in case, passed value contains path `TelegramWebviewProxy.postEvent` property and\n * `postEvent` is a function.\n * @param value - value to check.\n */\nexport function hasWebviewProxy<T>(value: T): value is T & {\n  TelegramWebviewProxy: {\n    postEvent: (...args: unknown[]) => unknown;\n  };\n} {\n  return is(\n    looseObject({ TelegramWebviewProxy: looseObject({ postEvent: fn() }) }),\n    value,\n  );\n}\n","/**\n * @see https://stackoverflow.com/a/326076\n * @returns True, if current environment is iframe.\n */\nexport function isIframe(): boolean {\n  try {\n    return window.self !== window.top;\n  } catch {\n    return true;\n  }\n}\n","import mitt, {\n  type Emitter,\n  type EventHandlerMap,\n  type EventType,\n  type Handler,\n} from 'mitt';\nimport type { If, IsNever, IsUndefined, Or } from '@telegram-apps/toolkit';\n\nexport type WildcardHandler<E> = Handler<{\n  [K in keyof E]: [K, If<Or<IsNever<E[K]>, IsUndefined<E[K]>>, void, E[K]>]\n}[keyof E]>;\n\nexport interface OnFn<E> {\n  /**\n   * Adds a new listener for the specified event.\n   * @param type - event name.\n   * @param handler - event listener.\n   * @param once - should listener be called only once.\n   * @returns Function to remove bound event listener.\n   */<K extends keyof E>(type: K, handler: Handler<E[K]>, once?: boolean): VoidFunction;\n  /**\n   * Adds a listener for all events.\n   * @param type - event name.\n   * @param handler - event listener.\n   * @param once - should listener be called only once.\n   * @returns Function to remove bound event listener.\n   */\n  (type: '*', handler: WildcardHandler<E>, once?: boolean): VoidFunction;\n}\n\nexport interface OffFn<E> {\n  /**\n   * Removes a listener for the specified event.\n   * @param type - event to listen.\n   * @param handler - event listener to remove.\n   * @param once - had this listener to be called only once.\n   */<K extends keyof E>(type: K, handler: Handler<E[K]>, once?: boolean): void;\n  /**\n   * Removes a listener for all events.\n   * @param type - event to stop listening.\n   * @param handler - event listener to remove.\n   * @param once - had this listener to be called only once.\n   */\n  (type: '*', handler: WildcardHandler<E>, once?: boolean): void;\n}\n\nexport interface EmitFn<E> {\n  <K extends keyof E>(type: K, event: E[K]): void;\n  <K extends keyof E>(type: undefined extends E[K] ? K : never): void;\n}\n\n/**\n * Creates a new enhanced event emitter.\n * @param onFirst - will be called when the first event was added.\n * @param onEmpty - will be called when emitter's listeners' map was emptied.\n */\nexport function createEmitter<E extends object>(\n  onFirst: VoidFunction,\n  onEmpty: VoidFunction,\n): [\n  on: OnFn<E>,\n  off: OffFn<E>,\n  emit: EmitFn<E>,\n  clear: VoidFunction\n] {\n  // To understand the event handlers concept here, let's tell the underlying idea.\n  //\n  // We use a Map, where key is an event name, and the value is a Map we call HandlersMap.\n  //\n  // The HandlersMap is a Map, where the key is an event handler, added by the developer.\n  // The corresponding value is a list of tuples, with an internally generated function and a\n  // boolean value responsible for determining if the handler must be called only once. So, you\n  // can imagine the following map as:\n  //\n  // HandlersMap {\n  //   { developer_handler }: Array<[ internally_created_handler, once ]>;\n  // }\n  //\n  // The value for the key represents an array of tuples, as long as a single handler may be added\n  // many times, and for each addition we add a new tuple entry.\n  //\n  // The handler may also be added to be called only once. Trying to remove such kind of handler\n  // using a different value of the \"once\" argument will lead to nothing. The developer must\n  // specify the same argument value to avoid confusions.\n  //\n  // Here is the final EventToHandlersMap definition:\n  //\n  // EventToHandlersMap {\n  //   { event_name }: HandlersMap {\n  //     { developer_handler }: Array<[ internally_created_handler, once ]>;\n  //   }\n  // }\n  type HandlersMap = Map<\n    (...args: any) => void,\n    [handler: (...args: any) => void, once: boolean][]\n  >;\n\n  const eventToHandlersMap = new Map<keyof E | '*', HandlersMap>();\n\n  const emitter = (mitt as any as {\n    <E extends Record<EventType, unknown>>(all?: EventHandlerMap<E>): Emitter<E>;\n  })<E & Record<string | symbol, unknown>>();\n\n  const off: OffFn<E> = (event: keyof E | '*', handler: (...args: any) => void, once?: boolean) => {\n    once ||= false;\n\n    const handlersMap: HandlersMap = eventToHandlersMap.get(event) || new Map();\n    eventToHandlersMap.set(event, handlersMap);\n\n    const handlers = handlersMap.get(handler) || [];\n    handlersMap.set(handler, handlers);\n\n    const index = handlers.findIndex(item => item[1] === once);\n    if (index >= 0) {\n      // Remove the related handler.\n      emitter.off(event, handlers[index][0]);\n\n      // Remove the handler from the cache array.\n      handlers.splice(index, 1);\n\n      // If after removal, there are no handlers left, we should remove the entry from the cache.\n      if (!handlers.length) {\n        handlersMap.delete(handler);\n        if (!handlersMap.size) {\n          const prevSize = eventToHandlersMap.size;\n          eventToHandlersMap.delete(event);\n          prevSize && !eventToHandlersMap.size && onEmpty();\n        }\n      }\n    }\n  };\n\n  return [\n    function on(event: keyof E | '*', handler: (...args: any[]) => any, once?: boolean) {\n      // The events' map became non-empty. Call the onFirst callback.\n      !eventToHandlersMap.size && onFirst();\n\n      const cleanup = () => {\n        off(event as any, handler, once);\n      };\n\n      const internalHandler = (...args: any[]) => {\n        once && cleanup();\n        if (event === '*') {\n          handler(args);\n        } else {\n          handler(...args);\n        }\n      };\n\n      emitter.on(event, internalHandler);\n\n      // Add this handler to the cache, so we could remove it using the passed listener.\n      const handlersMap: HandlersMap = eventToHandlersMap.get(event) || new Map();\n      eventToHandlersMap.set(event, handlersMap);\n\n      const handlers = handlersMap.get(handler) || [];\n      handlersMap.set(handler, handlers);\n      handlers.push([internalHandler, once || false]);\n\n      return cleanup;\n    },\n    off,\n    // eslint-disable-next-line @typescript-eslint/unbound-method\n    emitter.emit,\n    function offAll() {\n      const prevSize = eventToHandlersMap.size;\n      emitter.all.clear();\n      eventToHandlersMap.clear();\n      prevSize && onEmpty();\n    },\n  ];\n}\n","import type { EventWithoutPayload, EventWithPayload, EventPayload } from '@/events/types/index.js';\n\n/**\n * Emits an event without payload sent from the Telegram native application like it was sent in\n * a default web environment between two iframes.\n *\n * It dispatches a new MessageEvent and expects it to be handled via\n * the `window.addEventListener('message', ...)` call, as a developer would do it to handle\n * messages sent from the parent iframe.\n * @param eventType - event name.\n */\nexport function emitEvent<E extends EventWithoutPayload>(eventType: E): void;\n\n/**\n * Emits an event with payload sent from the Telegram native application like it was sent in\n * a default web environment between two iframes.\n *\n * It dispatches a new MessageEvent and expects it to be handled via\n * the `window.addEventListener('message', ...)` call, as a developer would do it to handle\n * messages sent from the parent iframe.\n * @param eventType - event name.\n * @param eventData - event payload.\n */\nexport function emitEvent<E extends EventWithPayload>(\n  eventType: E,\n  eventData: EventPayload<E>,\n): void;\n\n/**\n * Emits an unknown event sent from the Telegram native application like it was sent in a default\n * web environment between two iframes.\n *\n * It dispatches a new MessageEvent and expects it to be handled via\n * the `window.addEventListener('message', ...)` call, as a developer would do it to handle\n * messages sent from the parent iframe.\n * @param eventType - event name.\n * @param eventData - event payload.\n */\nexport function emitEvent<E extends string>(\n  eventType: E,\n  eventData: E extends EventWithoutPayload\n    ? never\n    : E extends EventWithPayload\n      ? EventPayload<E>\n      : unknown,\n): void;\n\n/**\n * Emits an event sent from the Telegram native application like it was sent in a default web\n * environment between two iframes.\n *\n * It dispatches a new MessageEvent and expects it to be handled via\n * the `window.addEventListener('message', ...)` call, as a developer would do it to handle\n * messages sent from the parent iframe.\n * @param eventType - event name.\n * @param eventData - event payload.\n */\nexport function emitEvent(eventType: string, eventData?: unknown): void {\n  window.dispatchEvent(new MessageEvent('message', {\n    data: JSON.stringify({ eventType, eventData }),\n    // We specify window.parent to imitate the case, the parent iframe sent us this event.\n    source: window.parent,\n  }));\n}\n","import type { SubscribeListener } from '@/events/types/index.js';\nimport { off, on } from '@/events/emitter.js';\nimport { logger } from '@/logger.js';\n\n/**\n * The package debug mode.\n *\n * Enabling debug mode leads to printing additional messages in the console related to the\n * processes inside the package.\n */\nexport let debug = false;\n\nconst listener: SubscribeListener = event => {\n  logger().log('Event received:', event);\n};\n\n/**\n * Sets the package debug mode.\n *\n * Enabling debug mode leads to printing additional messages in the console related to the\n * processes inside the package.\n * @param value - enable debug mode.\n */\nexport function setDebug(value: boolean): void {\n  if (value !== debug) {\n    debug = value;\n    debug ? on('*', listener) : off('*', listener);\n  }\n}\n","import { createLogger, type Logger } from '@telegram-apps/toolkit';\nimport { signal } from '@telegram-apps/signals';\n\nimport { debug } from '@/debug.js';\n\nexport const logger = signal<Logger>(createLogger('Bridge', {\n  bgColor: '#9147ff',\n  textColor: 'white',\n  shouldLog() {\n    return debug;\n  },\n}));\n","/**\n * Defines an enumerable and configurable property with a getter and setter.\n * @param obj - object.\n * @param prop - object property name.\n * @param get - getter to use.\n * @param set - setter to use.\n */\nexport function defineWithAccessors(\n  obj: any,\n  prop: string,\n  get: () => unknown,\n  set: (v: any) => void,\n) {\n  Object.defineProperty(obj, prop, {\n    enumerable: true,\n    configurable: true,\n    get,\n    set,\n  });\n}","import { defineWithAccessors } from '@/helpers/defineWithAccessors.js';\n\n/**\n * Wires the specified property in the object preventing it from being overwritten. Instead, it\n * enhances the previous value by merging the current one with the passed one.\n * @param obj - object.\n * @param prop - object property to rewire.\n */\nexport function defineEnhanceableProperty(obj: any, prop: string): void {\n  const value = obj[prop];\n  defineWithAccessors(obj, prop, () => value, v => {\n    Object.entries(v).forEach(([objKey, objValue]) => {\n      value[objKey] = objValue;\n    });\n  });\n}","/**\n * Defines an enumerable, configurable and writable property with initial value.\n * @param obj - object.\n * @param prop - object property name.\n * @param value - value to set.\n */\nexport function defineDefaultProperty(obj: any, prop: string, value: any): void {\n  Object.defineProperty(obj, prop, {\n    enumerable: true,\n    configurable: true,\n    writable: true,\n    value,\n  });\n}","import { defineWithAccessors } from '@/helpers/defineWithAccessors.js';\nimport { defineDefaultProperty } from '@/helpers/defineDefaultProperty.js';\n\n/**\n * Defines a property, that is a functions compose. Trying to set a value in this property\n * will lead to adding it to a function's pool. The property value will always be equal to a\n * function, calling all collected functions in the pool.\n *\n * Returned function performs a cleanup. It does one of the following:\n * 1. Removes the property if no functions were to the pool added other than the initial one.\n * 2. Sets the value equal to the first added function to the pool after the initial one if\n * the only one additional function was added at all. In other words, if the pool length is equal\n * to 2, the second item will be selected as the property value.\n * 3. Leaves the value equal to a function calling all pool functions, but removes the initially\n * added one.\n * @param obj - object.\n * @param prop - object property.\n * @param initialFn - an initial function to set.\n */\nexport function defineFnComposer(\n  obj: any,\n  prop: string,\n  initialFn: (...args: any) => any,\n): void {\n  const objProp = obj[prop];\n  const pool: any[] = [initialFn];\n\n  // Add the function to the pool.\n  typeof objProp === 'function' && pool.push(objProp);\n\n  // Calls all functions specified in the pool.\n  const callPool = (...args: any) => {\n    pool.forEach(fn => {\n      fn(...args);\n    });\n  };\n\n  // Wrap the callPool function and add \"unwrap\" method to it.\n  const callPoolWrapped = Object.assign((...args: any) => {\n    callPool(...args);\n  }, {\n    // Unwraps the composer.\n    unwrap() {\n      const { length: poolSize } = pool;\n      if (poolSize === 1) {\n        // Only the initial handler is in the pool. In this case we just remove the property.\n        delete obj[prop];\n        return;\n      }\n      if (poolSize === 2) {\n        // Only one additional handler was added. We set it as a value for the property.\n        defineDefaultProperty(obj, prop, pool[1]);\n        return;\n      }\n      // Many additional handlers were added. In this case we remove the initially added function\n      // from the pool and leave the property value almost as is - only \"unwrap\" method will be\n      // removed.\n      pool.unshift(1);\n      defineDefaultProperty(obj, prop, callPool);\n    }\n  });\n\n  // Define the composer.\n  defineWithAccessors(\n    obj,\n    prop,\n    () => callPoolWrapped,\n    value => {\n      pool.push(value);\n    },\n  );\n  return;\n}","import {\n  type InferOutput,\n  parse,\n  pipe,\n  string,\n  looseObject,\n  optional,\n  unknown,\n  number,\n  boolean,\n  nullish,\n  type BaseSchema,\n} from 'valibot';\nimport { jsonParse, MiniAppsMessageSchema, themeParams } from '@telegram-apps/transformers';\n\nimport { createEmitter } from '@/events/createEmitter.js';\nimport type { EventName, EventPayload, Events } from '@/events/types/index.js';\nimport { emitEvent } from '@/events/emitEvent.js';\nimport { logger } from '@/logger.js';\nimport { defineEnhanceableProperty } from '@/helpers/defineEnhanceableProperty.js';\nimport { defineFnComposer } from '@/helpers/defineFnComposer.js';\n\n/**\n * Transformers for problematic Mini Apps events.\n */\nconst transformers = {\n  clipboard_text_received: looseObject({\n    req_id: string(),\n    data: nullish(string()),\n  }),\n  custom_method_invoked: looseObject({\n    req_id: string(),\n    result: optional(unknown()),\n    error: optional(string()),\n  }),\n  popup_closed: nullish(\n    looseObject({ button_id: nullish(string(), () => undefined) }),\n    {},\n  ),\n  viewport_changed: looseObject({\n    height: number(),\n    width: nullish(number(), () => window.innerWidth),\n    is_state_stable: boolean(),\n    is_expanded: boolean(),\n  }),\n  theme_changed: looseObject({\n    theme_params: themeParams(),\n  }),\n} as const satisfies { [E in EventName]?: BaseSchema<unknown, EventPayload<E>, any> };\n\nfunction listener(event: MessageEvent): void {\n  // Ignore non-parent window messages.\n  if (event.source !== window.parent) {\n    return;\n  }\n\n  // Parse incoming event data.\n  let message: InferOutput<typeof MiniAppsMessageSchema>;\n  try {\n    message = parse(pipe(string(), jsonParse(), MiniAppsMessageSchema), event.data);\n  } catch {\n    // We ignore incorrect messages as they could be generated by any other code.\n    return;\n  }\n\n  const { eventType, eventData } = message;\n  const schema = transformers[eventType as keyof typeof transformers];\n\n  let data: unknown;\n  try {\n    data = schema ? parse(schema, eventData) : eventData;\n  } catch (cause) {\n    return logger().forceError(\n      [\n        `An error occurred processing the \"${eventType}\" event from the Telegram application.`,\n        'Please, file an issue here:',\n        'https://github.com/Telegram-Mini-Apps/telegram-apps/issues/new/choose',\n      ].join('\\n'),\n      message,\n      cause,\n    );\n  }\n  emit(eventType as any, data);\n}\n\nexport const [\n  on,\n  off,\n  emit,\n  offAll,\n] = createEmitter<Events>(\n  () => {\n    const wnd = window as any;\n\n    // Define all functions responsible for receiving an event from the Telegram client.\n    // All these \"ports\" should narrow the communication way to a single specific one - the way\n    // accepted by the web version of Telegram between iframes.\n    //\n    // Here we consider 2 cases:\n    // 1. When the Telegram SDK is already connected. In this case the Telegram SDK already\n    // installed its own ports, and we should rewire them. The cleanup function should also work\n    // properly in this context, removing @telegram-apps/bridge handler only, not\n    // the Telegram SDK one.\n    // 2. When the Telegram SDK is not connected, but probably will be. We know, that\n    // the Telegram SDK is going to overwrite our own handlers. Due to this reason, we should\n    // protect them from being overwritten, but still support handlers defined by the Telegram SDK.\n\n    // TelegramGameProxy.receiveEvent\n    !wnd.TelegramGameProxy && (wnd.TelegramGameProxy = {});\n    defineFnComposer(wnd.TelegramGameProxy, 'receiveEvent', emitEvent);\n    defineEnhanceableProperty(wnd, 'TelegramGameProxy');\n\n    // Telegram.WebView.receiveEvent\n    !wnd.Telegram && (wnd.Telegram = {});\n    !wnd.Telegram.WebView && (wnd.Telegram.WebView = {});\n    defineFnComposer(wnd.Telegram.WebView, 'receiveEvent', emitEvent);\n    defineEnhanceableProperty(wnd.Telegram, 'WebView');\n\n    // TelegramGameProxy_receiveEvent\n    defineFnComposer(wnd, 'TelegramGameProxy_receiveEvent', emitEvent);\n\n    // Add a listener handling events sent from the Telegram web application and also events\n    // generated by the local emitEvent function.\n    // This handler should emit a new event using the library event emitter.\n    window.addEventListener('message', listener);\n  },\n  () => {\n    [\n      ['TelegramGameProxy_receiveEvent'],\n      ['TelegramGameProxy', 'receiveEvent'],\n      ['Telegram', 'WebView', 'receiveEvent'],\n    ].forEach(path => {\n      const wnd = window as any;\n\n      // A tuple, where the first value is the receiveEvent function owner, and the second\n      // value is the receiveEvent itself.\n      let cursor: [any, any] = [undefined, wnd];\n      for (const item of path) {\n        cursor = [cursor[1], cursor[1][item]];\n        if (!cursor[1]) {\n          return;\n        }\n      }\n      const [receiveEventOwner, receiveEvent] = cursor;\n      if ('unwrap' in receiveEvent) {\n        receiveEvent.unwrap();\n        if (\n          receiveEventOwner\n          && receiveEventOwner !== wnd\n          && !Object.keys(receiveEventOwner).length\n        ) {\n          delete wnd[path[0]];\n        }\n      }\n    });\n    window.removeEventListener('message', listener);\n  },\n);\n","import { errorClass, errorClassWithData } from 'error-kid';\nimport type { Version } from '@telegram-apps/types';\n\nexport const [\n  MethodUnsupportedError,\n  isMethodUnsupportedError,\n] = errorClass<[method: string, version: Version]>(\n  'MethodUnsupportedError',\n  (method, version) => [\n    `Method \"${method}\" is unsupported in Mini Apps version ${version}`,\n  ],\n);\n\nexport const [\n  MethodParameterUnsupportedError,\n  isMethodMethodParameterUnsupportedError,\n] = errorClass<[method: string, param: string, version: Version]>(\n  'MethodParameterUnsupportedError',\n  (method, param, version) => [\n    `Parameter \"${param}\" of \"${method}\" method is unsupported in Mini Apps version ${version}`,\n  ],\n);\n\nexport const [\n  LaunchParamsRetrieveError,\n  isLaunchParamsRetrieveError,\n] = errorClassWithData<\n  { errors: [source: string, error: unknown][] },\n  [[source: string, error: unknown][]]\n>(\n  'LaunchParamsRetrieveError',\n  errors => ({ errors }),\n  errors => [\n    [\n      'Unable to retrieve launch parameters from any known source. Perhaps, you have opened your app outside Telegram?',\n      'ðŸ“– Refer to docs for more information:',\n      'https://docs.telegram-mini-apps.com/packages/telegram-apps-bridge/environment',\n      '',\n      'Collected errors:',\n      ...errors.map(([source, error]) => {\n        return `Source: ${source} / ${error instanceof Error ? error.message : String(error)}`;\n      }),\n    ].join('\\n'),\n  ],\n);\n\nexport const [\n  InvalidLaunchParamsError,\n  isInvalidLaunchParamsError,\n] = errorClass<[launchParams: string, cause: unknown]>(\n  'InvalidLaunchParamsError',\n  (launchParams, cause) => [\n    `Invalid value for launch params: ${launchParams}`,\n    { cause },\n  ],\n);\n\nexport const [UnknownEnvError, isUnknownEnvError] = errorClass('UnknownEnvError');\n\nexport const [\n  InvokeCustomMethodError,\n  isInvokeCustomMethodError,\n] = errorClass<[error: string]>(\n  'InvokeCustomMethodError',\n  error => [`Server returned error: ${error}`],\n);","import { signal } from '@telegram-apps/signals';\n\nimport { logger } from '@/logger.js';\n\nexport type PostMessage = typeof window.parent.postMessage;\n\n/**\n * Signal containing a custom implementation of the method to post a message to the parent\n * window. We usually use it to send a message in web versions of Telegram.\n *\n * Initially, this value contains a function behaving like the `window.parent.postMessage` method.\n */\nexport const postMessageImplementation = signal<PostMessage>((...args: any[]) => {\n  try {\n    window.parent.postMessage(...args as Parameters<PostMessage>);\n  } catch (e) {\n    if (e instanceof SyntaxError) {\n      logger().forceError(\n        'Unable to call window.parent.postMessage due to incorrectly configured target origin. Use the setTargetOrigin method to allow this origin to receive events',\n        e,\n      );\n    } else {\n      logger().forceError(e);\n    }\n  }\n});\n\n/**\n * Posts a message to the parent window. We usually use it to send a message in web versions of\n * Telegram.\n * @param args - `window.parent.postMessage` arguments.\n */\nexport const postMessage: PostMessage = (...args) => {\n  return postMessageImplementation()(...args as unknown as Parameters<PostMessage>);\n};\n","import { signal } from '@telegram-apps/signals';\n\nimport { logger } from '@/logger.js';\n\n/**\n * Target origin used by the `postEvent` method.\n *\n * You don't need to override this value until you know what you are doing.\n * @default 'https://web.telegram.org'\n */\nexport const targetOrigin = signal('https://web.telegram.org');\n\n/**\n * Sets a new target origin that is being used when calling the `postEvent` function in Telegram\n * web versions.\n * @param origin - allowed target origin value.\n * @see targetOrigin\n */\nexport function setTargetOrigin(origin: string) {\n  targetOrigin.set(origin);\n  logger().log('New target origin set', origin);\n}","import { is, looseObject, function as fn } from 'valibot';\n\nimport { logger } from '@/logger.js';\nimport { isIframe } from '@/env/isIframe.js';\nimport { hasWebviewProxy } from '@/env/hasWebviewProxy.js';\nimport { UnknownEnvError } from '@/errors.js';\nimport type {\n  MethodName,\n  MethodNameWithOptionalParams,\n  MethodNameWithoutParams,\n  MethodNameWithRequiredParams,\n  MethodParams,\n} from '@/methods/types/index.js';\n\nimport { postMessage } from './postMessage.js';\nimport { targetOrigin } from './targetOrigin.js';\n\nexport type PostEventFn = typeof postEvent;\n\n/**\n * Calls Mini Apps methods requiring parameters.\n * @param method - method name.\n * @param params - options along with params.\n * @throws {UnknownEnvError} The environment is unknown.\n */\nexport function postEvent<Method extends MethodNameWithRequiredParams>(\n  method: Method,\n  params: MethodParams<Method>,\n): void;\n\n/**\n * Calls Mini Apps methods accepting no parameters at all.\n * @param method - method name.\n * @throws {UnknownEnvError} The environment is unknown.\n */\nexport function postEvent(method: MethodNameWithoutParams): void;\n\n/**\n * Calls Mini Apps methods accepting optional parameters.\n * @param method - method name.\n * @param params - options along with params.\n * @throws {UnknownEnvError} The environment is unknown.\n */\nexport function postEvent<Method extends MethodNameWithOptionalParams>(\n  method: Method,\n  params?: MethodParams<Method>,\n): void;\n\nexport function postEvent(\n  eventType: MethodName,\n  eventData?: MethodParams<MethodName>,\n): void {\n  logger().log('Posting event:', eventData ? { eventType, eventData } : { eventType });\n\n  const w = window;\n\n  const message = JSON.stringify({ eventType, eventData });\n\n  // Telegram Web.\n  if (isIframe()) {\n    return postMessage(message, targetOrigin());\n  }\n\n  // Telegram for iOS, macOS, Android and Telegram Desktop.\n  if (hasWebviewProxy(w)) {\n    w.TelegramWebviewProxy.postEvent(eventType, JSON.stringify(eventData));\n    return;\n  }\n\n  // Telegram for Windows Phone or Android.\n  if (is(looseObject({ external: looseObject({ notify: fn() }) }), w)) {\n    w.external.notify(message);\n    return;\n  }\n\n  // Otherwise, the current environment is unknown, and we are not able to send event.\n  throw new UnknownEnvError();\n}\n","import {\n  createCbCollector,\n  type If,\n  type IsNever,\n} from '@telegram-apps/toolkit';\nimport { AbortablePromise, type PromiseOptions } from 'better-promises';\n\nimport { on } from '@/events/emitter.js';\nimport { postEvent, PostEventFn } from '@/methods/postEvent.js';\nimport type {\n  MethodName,\n  MethodNameWithOptionalParams,\n  MethodNameWithoutParams,\n  MethodNameWithRequiredParams,\n  MethodParams,\n} from '@/methods/types/index.js';\nimport type { EventName, EventPayload } from '@/events/types/events.js';\n\ntype AnyEventName = EventName | EventName[];\n\nexport type RequestCaptureFnEventsPayload<E extends EventName[]> = E extends (infer U extends EventName)[]\n  ? {\n    [K in U]: If<\n      IsNever<EventPayload<K>>,\n      { event: K },\n      { event: K; payload: EventPayload<K> }\n    >\n  }[U]\n  : never;\n\nexport type RequestCaptureEventsFn<E extends EventName[]> = (\n  payload: RequestCaptureFnEventsPayload<E>,\n) => boolean\n\nexport type RequestCaptureEventFn<E extends EventName> = If<\n  IsNever<EventPayload<E>>,\n  () => boolean,\n  (payload: EventPayload<E>) => boolean\n>;\n\nexport type RequestCaptureFn<E extends AnyEventName> = E extends EventName[]\n  ? RequestCaptureEventsFn<E>\n  : E extends EventName\n    ? RequestCaptureEventFn<E>\n    : never;\n\nexport interface RequestOptions<E extends AnyEventName>\n  extends Omit<PromiseOptions, 'rejectOnAbort'> {\n  /**\n   * Should return true if this event should be captured.\n   * The first compatible request will be captured if this property is omitted.\n   */\n  capture?: RequestCaptureFn<E>;\n  /**\n   * Custom function to call mini apps methods.\n   */\n  postEvent?: PostEventFn;\n}\n\nexport type RequestResult<E extends AnyEventName> =\n  E extends (infer U extends EventName)[]\n    ? U extends infer K extends EventName\n      ? If<IsNever<EventPayload<K>>, undefined, EventPayload<K>>\n      : never\n    : E extends EventName\n      ? If<IsNever<EventPayload<E>>, undefined, EventPayload<E>>\n      : never;\n\nexport type RequestFn = typeof request;\n\n/**\n * Performs a request waiting for specified events to occur.\n *\n * This overriding is used for methods, requiring parameters.\n * @param method - method name.\n * @param eventOrEvents - tracked event or events.\n * @param options - additional options.\n */\nexport function request<M extends MethodNameWithRequiredParams, E extends AnyEventName>(\n  method: M,\n  eventOrEvents: E,\n  options: RequestOptions<E> & { params: MethodParams<M> },\n): AbortablePromise<RequestResult<E>>;\n\n/**\n * Performs a request waiting for specified events to occur.\n *\n * This overriding is used for methods with optional parameters.\n * @param method - method name.\n * @param eventOrEvents - tracked event or events.\n * @param options - additional options.\n */\nexport function request<M extends MethodNameWithOptionalParams, E extends AnyEventName>(\n  method: M,\n  eventOrEvents: E,\n  options?: RequestOptions<E> & { params?: MethodParams<M> },\n): AbortablePromise<RequestResult<E>>;\n\n/**\n * Performs a request waiting for specified events to occur.\n *\n * This overriding is used for methods without parameters.\n * @param method - method name.\n * @param eventOrEvents - tracked event or events.\n * @param options - additional options.\n */\nexport function request<M extends MethodNameWithoutParams, E extends AnyEventName>(\n  method: M,\n  eventOrEvents: E,\n  options?: RequestOptions<E>,\n): AbortablePromise<RequestResult<E>>;\n\nexport function request<M extends MethodName, E extends AnyEventName>(\n  method: M,\n  eventOrEvents: E,\n  options?: RequestOptions<E> & { params?: MethodParams<M> },\n): AbortablePromise<RequestResult<E>> {\n  options ||= {};\n  const { capture } = options;\n  const [addCleanup, cleanup] = createCbCollector();\n\n  return new AbortablePromise<RequestResult<E>>((resolve) => {\n    // We need to iterate over all tracked events and create their event listeners.\n    ((Array.isArray(eventOrEvents) ? eventOrEvents : [eventOrEvents])).forEach(event => {\n      // Each event listener waits for the event to occur.\n      // Then, if the capture function was passed, we should check if the event should be captured.\n      // If the function is omitted, we instantly capture the event.\n      addCleanup(\n        on(event, payload => {\n          if (!capture || (\n            Array.isArray(eventOrEvents)\n              ? (capture as RequestCaptureEventsFn<EventName[]>)({\n                event,\n                payload,\n              } as RequestCaptureFnEventsPayload<EventName[]>)\n              : (capture as RequestCaptureEventFn<EventName>)(payload)\n          )) {\n            resolve(payload as RequestResult<E>);\n          }\n        }),\n      );\n    });\n\n    (options.postEvent || postEvent)(method as any, (options as any).params);\n  }, options)\n    .finally(cleanup);\n}\n","import { isLaunchParamsQuery, parseLaunchParamsQuery } from '@telegram-apps/transformers';\nimport { getStorageValue, setStorageValue } from '@telegram-apps/toolkit';\n\nimport { LaunchParamsRetrieveError } from '@/errors.js';\n\nconst SESSION_STORAGE_KEY = 'launchParams';\n\n/**\n * @param urlString - URL to extract launch parameters from.\n * @returns Launch parameters from the specified URL.\n * @throws Error if function was unable to extract launch parameters from the passed URL.\n */\nfunction fromURL(urlString: string): string {\n  return urlString\n    // Replace everything before this first hashtag or question sign.\n    .replace(/^[^?#]*[?#]/, '')\n    // Replace all hashtags and question signs to make it look like some search params.\n    .replace(/[?#]/g, '&');\n}\n\n/**\n * @returns Launch parameters in a raw format from any known source.\n * @throws {LaunchParamsRetrieveError} Unable to retrieve launch parameters. They are probably\n * invalid.\n */\nexport function retrieveRawLaunchParams(): string {\n  const errors: [source: string, error: unknown][] = [];\n  for (const [retrieve, source] of [\n    // Try to retrieve launch parameters from the current location. This method can return\n    // nothing in case, location was changed, and then the page was reloaded.\n    [() => fromURL(window.location.href), 'window.location.href'],\n    // Then, try using the lower level API - window.performance.\n    [() => {\n      const navigationEntry = performance.getEntriesByType('navigation')[0] as PerformanceNavigationTiming | undefined;\n      return navigationEntry && fromURL(navigationEntry.name);\n    }, 'performance navigation entries'],\n    [() => getStorageValue<string>(SESSION_STORAGE_KEY), 'local storage'],\n  ] as const) {\n    const v = retrieve();\n    if (!v) {\n      errors.push([source, new Error('Source is empty')]);\n      continue;\n    }\n    if (isLaunchParamsQuery(v)) {\n      setStorageValue(SESSION_STORAGE_KEY, v);\n      return v;\n    }\n    try {\n      parseLaunchParamsQuery(v);\n    } catch (e) {\n      errors.push([source, e]);\n    }\n  }\n  throw new LaunchParamsRetrieveError(errors);\n}","import { LaunchParamsSchema, parseLaunchParamsQuery } from '@telegram-apps/transformers';\nimport {\n  type DeepConvertSnakeKeysToCamelCase,\n  deepSnakeToCamelObjKeys,\n} from '@telegram-apps/toolkit';\nimport type { InferOutput } from 'valibot';\n\nimport { retrieveRawLaunchParams } from '@/launch-params/retrieveRawLaunchParams.js';\n\nexport type RetrieveLPResult = InferOutput<typeof LaunchParamsSchema>;\nexport type RetrieveLPResultCamelCased =\n  DeepConvertSnakeKeysToCamelCase<InferOutput<typeof LaunchParamsSchema>>;\n\n/**\n * @returns Launch parameters from any known source.\n * @param camelCase - should the output be camel-cased.\n * @throws {LaunchParamsRetrieveError} Unable to retrieve launch parameters. They are probably\n * invalid.\n */\nexport function retrieveLaunchParams(camelCase?: false): RetrieveLPResult;\n\n/**\n * @returns Launch parameters from any known source.\n * @param camelCase - should the output be camel-cased.\n * @throws {LaunchParamsRetrieveError} Unable to retrieve launch parameters. They are probably\n * invalid.\n */\nexport function retrieveLaunchParams(camelCase: true): RetrieveLPResultCamelCased;\n\n/**\n * @returns Launch parameters from any known source.\n * @throws {LaunchParamsRetrieveError} Unable to retrieve launch parameters. They are probably\n * invalid.\n */\nexport function retrieveLaunchParams(camelCase?: boolean):\n  | RetrieveLPResult\n  | RetrieveLPResultCamelCased {\n  const launchParams = parseLaunchParamsQuery(retrieveRawLaunchParams());\n  return camelCase ? deepSnakeToCamelObjKeys(launchParams) : launchParams;\n}\n","import { AbortablePromise, type PromiseOptions } from 'better-promises';\n\nimport { request } from '@/utils/request.js';\nimport { hasWebviewProxy } from '@/env/hasWebviewProxy.js';\nimport { retrieveLaunchParams } from '@/launch-params/retrieveLaunchParams.js';\n\n/**\n * Returns true if the current environment is Telegram Mini Apps.\n *\n * It uses the `retrieveLaunchParams` function to determine if the environment contains\n * launch parameters. In case it does, true will be returned.\n *\n * In case you need stricter checks, use async override of this function.\n */\nexport function isTMA(): boolean;\n\n/**\n * Returns promise with true if the current environment is Telegram Mini Apps.\n *\n * First of all, it checks if the current environment contains traits specific to the\n * Mini Apps environment.\n * Then, it attempts to call a Mini Apps method and waits for a response to be received.\n *\n * In case you need less strict checks, use sync override of this function.\n */\nexport function isTMA(type: 'complete', options?: PromiseOptions): AbortablePromise<boolean>\n\nexport function isTMA(\n  type?: 'complete',\n  options?: PromiseOptions,\n): boolean | AbortablePromise<boolean> {\n  if (!type) {\n    try {\n      retrieveLaunchParams();\n      return true;\n    } catch {\n      return false;\n    }\n  }\n\n  return AbortablePromise.fn(async context => {\n    if (hasWebviewProxy(window)) {\n      return true;\n    }\n    try {\n      await request('web_app_request_theme', 'theme_changed', context);\n      return true;\n    } catch {\n      return false;\n    }\n  }, options || { timeout: 100 });\n}\n","import { is, parse, pipe, string } from 'valibot';\nimport {\n  isLaunchParamsQuery,\n  jsonParse,\n  type LaunchParamsLike,\n  MiniAppsMessageSchema,\n  serializeLaunchParamsQuery,\n  parseLaunchParamsQuery,\n} from '@telegram-apps/transformers';\nimport { If, IsNever, setStorageValue } from '@telegram-apps/toolkit';\n\nimport { logger } from '@/logger.js';\nimport { isIframe } from '@/env/isIframe.js';\nimport type { MethodName, MethodParams } from '@/methods/types/index.js';\nimport { InvalidLaunchParamsError } from '@/errors.js';\nimport { postMessageImplementation } from '@/methods/postMessage.js';\n\n/**\n * Mocks the environment and imitates Telegram Mini Apps behavior.\n *\n * We usually use this function in the following cases:\n * 1. We are developing an application outside the Telegram environment and would like to imitate\n * the Telegram client in order to re-create the same communication behavior.\n * 2. We would like to intercept some Telegram Mini Apps methods' calls in order to enhance them\n * or write a custom behavior. It is extremely useful in some Telegram clients improperly handling\n * Mini Apps methods' calls and not even responding.\n *\n * Note that calling this function in Telegram web clients, the `postMessageImplementation` signal\n * value will be updated with a new one, enhancing previously set signal value to allow wrapping\n * the original `window.parent.postMessage` function. In other words, calling `mockTelegramEnv`\n * function N times, you will effectively wrap previously set implementation N times, so be\n * careful calling this function several times during a single lifecycle of the app. In case you\n * would like to avoid such kind of behavior, use the `resetPostMessage` option.\n */\nexport function mockTelegramEnv({ launchParams, onEvent, resetPostMessage }: {\n  /**\n   * Launch parameters to mock. They will be saved in the storage, so the SDK functions could\n   * retrieve them.\n   *\n   * Note that this value must have `tgWebAppData` presented in a raw format as long as you will\n   * need it when retrieving init data in this format. Otherwise, init data may be broken.\n   */\n  launchParams?:\n    | (Omit<LaunchParamsLike, 'tgWebAppData'> & { tgWebAppData?: string | URLSearchParams })\n    | string\n    | URLSearchParams;\n  /**\n   * Function that will be called if a Mini Apps method call was requested by the mini app.\n   *\n   * It receives a Mini Apps method name along with the passed payload.\n   *\n   * Note that using the `next` function, in non-web environments it uses the\n   * `window.TelegramWebviewProxy.postEvent`.\n   *\n   * Talking about the web versions of Telegram, the value is a bit more complex - it will\n   * equal to the value stored in the `postMessageImplementation` signal set previously. By default,\n   * this value contains a function utilizing the `window.parent.postMessage` method.\n   * @param event - event information.\n   * @param next - function to call the original method used to call a Mini Apps method.\n   */\n  onEvent?: (\n    event: {\n      [M in MethodName]: [M, If<IsNever<MethodParams<M>>, void, MethodParams<M>>]\n    }[MethodName] | [string, unknown],\n    next: () => void,\n  ) => void;\n  /**\n   * Removes all previously set enhancements of the `window.parent.postMessage` function set\n   * by other `mockTelegramEnv` calls.\n   * @default false\n   */\n  resetPostMessage?: boolean;\n} = {}): void {\n  if (launchParams) {\n    // If launch parameters were passed, save them in the session storage, so\n    // the retrieveLaunchParams function would return them.\n    const launchParamsQuery =\n      typeof launchParams === 'string' || launchParams instanceof URLSearchParams\n        ? launchParams.toString()\n        : (\n          // Here we have to trick serializeLaunchParamsQuery into thinking, it serializes a valid\n          // value. We are doing it because we are working with tgWebAppData presented as a\n          // string, not an object as serializeLaunchParamsQuery requires.\n          serializeLaunchParamsQuery({ ...launchParams, tgWebAppData: undefined })\n          // Then, we just append init data.\n          + (launchParams.tgWebAppData ? `&tgWebAppData=${encodeURIComponent(launchParams.tgWebAppData.toString())}` : '')\n        );\n\n    // Remember to check if launch params are valid.\n    if (!isLaunchParamsQuery(launchParamsQuery)) {\n      try {\n        parseLaunchParamsQuery(launchParamsQuery);\n      } catch (e) {\n        throw new InvalidLaunchParamsError(launchParamsQuery, e);\n      }\n    }\n    setStorageValue('launchParams', launchParamsQuery);\n  }\n\n  // Original postEvent firstly checks if the current environment is iframe.\n  // That's why we have a separate branch for this environment here too.\n  if (isIframe()) {\n    if (!onEvent) {\n      return;\n    }\n    const MiniAppsMessageJson = pipe(\n      string(),\n      jsonParse(),\n      MiniAppsMessageSchema,\n    );\n\n    // As long as the postEvent function uses the postMessage method, we should rewire it.\n    resetPostMessage && postMessageImplementation.reset();\n    const original = postMessageImplementation();\n    postMessageImplementation.set((...args) => {\n      const [message] = args;\n      const next = () => {\n        (original as any)(...args);\n      };\n\n      // Pass only Telegram Mini Apps events to the handler. All other calls should be passed\n      // to the original handler (window.parent.postMessage likely).\n      if (is(MiniAppsMessageJson, message)) {\n        const data = parse(MiniAppsMessageJson, message);\n        onEvent([data.eventType, data.eventData], next);\n      } else {\n        next();\n      }\n    });\n\n    return;\n  }\n\n  // In all other environments, it is enough to define window.TelegramWebviewProxy.postEvent.\n  const proxy = (window as any).TelegramWebviewProxy || {};\n  const postEventDefaulted = proxy.postEvent || (() => undefined);\n  (window as any).TelegramWebviewProxy = {\n    ...proxy,\n    postEvent(eventType: string, eventData: string) {\n      const next = () => {\n        postEventDefaulted(eventType, eventData);\n      };\n      onEvent\n        ? onEvent([eventType, eventData ? JSON.parse(eventData) : undefined], next)\n        : next();\n    },\n  };\n\n  logger().log('Environment was mocked by the mockTelegramEnv function');\n}\n","import { retrieveRawLaunchParams } from '@/launch-params/retrieveRawLaunchParams.js';\n\n/**\n * @returns Raw init data from any known source.\n * @throws {LaunchParamsRetrieveError} Unable to retrieve launch params from any known source.\n */\nexport function retrieveRawInitData(): string | undefined {\n  return new URLSearchParams(retrieveRawLaunchParams()).get('tgWebAppData') || undefined;\n}","type CaptureSameReqFn = (payload: { req_id: string }) => boolean;\n\n/**\n * Returns a function which can be used in `request` function `capture` property to capture\n * the event with the same request identifier.\n * @param reqId - request identifier.\n */\nexport function captureSameReq(reqId: string): CaptureSameReqFn {\n  return ({ req_id }) => req_id === reqId;\n}\n","import type { Version } from '@telegram-apps/types';\n\nfunction parts(a: Version): number[] {\n  return a.split('.').map(Number);\n}\n\n/**\n * @param a - first version.\n * @param b - second version.\n * @returns\n * - `1` if the version \"a\" is greater than \"b\".\n * - `0` the version \"a\" is equal to \"b\".\n * - `-1` the version \"a\" is lower than \"b\".\n */\nexport function compareVersions(a: Version, b: Version): number {\n  const aParts = parts(a);\n  const bParts = parts(b);\n  const len = Math.max(aParts.length, bParts.length);\n\n  // Iterate over each part of versions and compare them. In case, part is\n  // missing, assume its value is equal to 0.\n  for (let i = 0; i < len; i += 1) {\n    const aVal = aParts[i] || 0\n    const bVal = bParts[i] || 0;\n\n    if (aVal === bVal) {\n      continue;\n    }\n    return aVal > bVal ? 1 : -1;\n  }\n  return 0;\n}\n","import type { Version } from '@telegram-apps/types';\n\nimport { compareVersions } from '@/utils/compareVersions.js';\nimport type {\n  MethodName,\n  MethodNameWithVersionedParams,\n  MethodVersionedParams,\n} from '@/methods/types/index.js';\n\n/**\n * Returns true if \"a\" version is less than or equal to \"b\" version.\n * @param a\n * @param b\n */\nfunction versionLessOrEqual(a: Version, b: Version): boolean {\n  return compareVersions(a, b) <= 0;\n}\n\n/**\n * Returns true in case, passed parameter in specified method is supported.\n * @param method - method name\n * @param param - method parameter\n * @param inVersion - platform version.\n */\nexport function supports<M extends MethodNameWithVersionedParams>(\n  method: M,\n  param: MethodVersionedParams<M>,\n  inVersion: Version,\n): boolean;\n\n/**\n * Returns true in case, specified method is supported in a passed version.\n * @param method - method name.\n * @param inVersion - platform version.\n */\nexport function supports(method: MethodName, inVersion: Version): boolean;\n\nexport function supports(\n  method: MethodName,\n  paramOrVersion: Version | string,\n  inVersion?: string,\n): boolean {\n  // Method name, parameter, target version.\n  if (typeof inVersion === 'string') {\n    if (method === 'web_app_open_link') {\n      if (paramOrVersion === 'try_instant_view') {\n        return versionLessOrEqual('6.4', inVersion);\n      }\n      if (paramOrVersion === 'try_browser') {\n        return versionLessOrEqual('7.6', inVersion);\n      }\n    }\n\n    if (method === 'web_app_set_header_color') {\n      if (paramOrVersion === 'color') {\n        return versionLessOrEqual('6.9', inVersion);\n      }\n    }\n\n    if (method === 'web_app_close' && paramOrVersion === 'return_back') {\n      return versionLessOrEqual('7.6', inVersion);\n    }\n\n    if (method === 'web_app_setup_main_button' && paramOrVersion === 'has_shine_effect') {\n      return versionLessOrEqual('7.10', inVersion);\n    }\n  }\n\n  switch (method) {\n    case 'web_app_open_tg_link':\n    case 'web_app_open_invoice':\n    case 'web_app_setup_back_button':\n    case 'web_app_set_background_color':\n    case 'web_app_set_header_color':\n    case 'web_app_trigger_haptic_feedback':\n      return versionLessOrEqual('6.1', paramOrVersion);\n    case 'web_app_open_popup':\n      return versionLessOrEqual('6.2', paramOrVersion);\n    case 'web_app_close_scan_qr_popup':\n    case 'web_app_open_scan_qr_popup':\n    case 'web_app_read_text_from_clipboard':\n      return versionLessOrEqual('6.4', paramOrVersion);\n    case 'web_app_switch_inline_query':\n      return versionLessOrEqual('6.7', paramOrVersion);\n    case 'web_app_invoke_custom_method':\n    case 'web_app_request_write_access':\n    case 'web_app_request_phone':\n      return versionLessOrEqual('6.9', paramOrVersion);\n    case 'web_app_setup_settings_button':\n      return versionLessOrEqual('6.10', paramOrVersion);\n    case 'web_app_biometry_get_info':\n    case 'web_app_biometry_open_settings':\n    case 'web_app_biometry_request_access':\n    case 'web_app_biometry_request_auth':\n    case 'web_app_biometry_update_token':\n      return versionLessOrEqual('7.2', paramOrVersion);\n    case 'web_app_setup_swipe_behavior':\n      return versionLessOrEqual('7.7', paramOrVersion);\n    case 'web_app_share_to_story':\n      return versionLessOrEqual('7.8', paramOrVersion);\n    case 'web_app_setup_secondary_button':\n    case 'web_app_set_bottom_bar_color':\n      return versionLessOrEqual('7.10', paramOrVersion);\n    case 'web_app_request_safe_area':\n    case 'web_app_request_content_safe_area':\n    case 'web_app_request_fullscreen':\n    case 'web_app_exit_fullscreen':\n    case 'web_app_set_emoji_status':\n    case 'web_app_add_to_home_screen':\n    case 'web_app_check_home_screen':\n    case 'web_app_request_emoji_status_access':\n    case 'web_app_check_location':\n    case 'web_app_open_location_settings':\n    case 'web_app_request_file_download':\n    case 'web_app_request_location':\n    case 'web_app_send_prepared_message':\n    case 'web_app_start_accelerometer':\n    case 'web_app_start_device_orientation':\n    case 'web_app_start_gyroscope':\n    case 'web_app_stop_accelerometer':\n    case 'web_app_stop_device_orientation':\n    case 'web_app_stop_gyroscope':\n    case 'web_app_toggle_orientation_lock':\n      return versionLessOrEqual('8.0', paramOrVersion);\n    default:\n      return [\n        'iframe_ready',\n        'iframe_will_reload',\n        'web_app_close',\n        'web_app_data_send',\n        'web_app_expand',\n        'web_app_open_link',\n        'web_app_ready',\n        'web_app_request_theme',\n        'web_app_request_viewport',\n        'web_app_setup_main_button',\n        'web_app_setup_closing_behavior',\n      ].includes(method);\n  }\n}\n","import { any, is, looseObject } from 'valibot';\nimport type { Version } from '@telegram-apps/types';\n\nimport { supports } from '@/methods/supports.js';\nimport { type PostEventFn, postEvent } from '@/methods/postEvent.js';\nimport type {\n  MethodName,\n  MethodNameWithVersionedParams,\n  MethodVersionedParams,\n} from '@/methods/types/index.js';\nimport { MethodParameterUnsupportedError, MethodUnsupportedError } from '@/errors.js';\nimport { logger } from '@/logger.js';\n\nexport type OnUnsupportedFn = (\n  data: { version: Version } & (\n    | { method: MethodName }\n    | {\n    [M in MethodNameWithVersionedParams]: {\n      method: M;\n      param: MethodVersionedParams<M>;\n    };\n  }[MethodNameWithVersionedParams]),\n) => void;\n\nexport type CreatePostEventMode = 'strict' | 'non-strict';\n\n/**\n * Creates a function that checks if the specified method and parameters are supported.\n *\n * If the method or parameters are unsupported, the `onUnsupported` function will be called.\n *\n * If `strict` or `non-strict` value was passed as the second argument, the function\n * will create its own `onUnsupported` function with behavior depending on the value passed.\n *\n * - Passing `strict` will make the function to throw a `MethodParameterUnsupportedError`\n * or a `MethodUnsupportedError` error.\n * - Passing `non-strict` will just warn you about something being unsupported.\n *\n * @param version - Telegram Mini Apps version.\n * @param onUnsupportedOrMode - function or strict mode. Default: `strict`\n */\nexport function createPostEvent(\n  version: Version,\n  onUnsupportedOrMode?: OnUnsupportedFn | CreatePostEventMode,\n): PostEventFn {\n  onUnsupportedOrMode ||= 'strict';\n  const onUnsupported: OnUnsupportedFn = typeof onUnsupportedOrMode === 'function'\n    ? onUnsupportedOrMode\n    : data => {\n      const { method, version } = data;\n      const error = 'param' in data\n        ? new MethodParameterUnsupportedError(method, data.param, version)\n        : new MethodUnsupportedError(method, version);\n\n      if (onUnsupportedOrMode === 'strict') {\n        throw error;\n      }\n      return logger().forceWarn(error.message);\n    };\n\n  return ((method: any, params: any) => {\n    // Firstly, check if the method is supported.\n    if (!supports(method, version)) {\n      return onUnsupported({ version, method });\n    }\n\n    // Method could use parameters, which are supported only in specific versions of Mini Apps.\n    // We are validating only those parameters, which are not backward compatible.\n    if (\n      method === 'web_app_set_header_color'\n      && is(looseObject({ color: any() }), params)\n      && !supports(method, 'color', version)\n    ) {\n      return onUnsupported({ version, method, param: 'color' });\n    }\n\n    return postEvent(method, params);\n  }) as PostEventFn;\n}\n","import { encodeBase64Url } from '@/base64-url/encodeBase64Url.js';\n\n/**\n * Creates a safe start parameter value. If the value is not a string, the function applies\n * JSON.stringify to it, so make sure you are not passing an object with circular references.\n *\n * @param value - value to create start parameter from.\n * @throws {Error} If the value length is too big for the allowed one.\n * @see Learn more about start parameter:\n * https://docs.telegram-mini-apps.com/platform/start-parameter\n */\nexport function createStartParam(value: unknown): string {\n  const b64 = encodeBase64Url(typeof value === 'string' ? value : JSON.stringify(value));\n  if (b64.length > 512) {\n    throw new Error('Value is too long for start parameter');\n  }\n  return b64;\n}\n","import { decodeBase64Url } from '@/base64-url/decodeBase64Url.js';\n\n/**\n * Decodes a start parameter using a custom parser.\n * @param value - a start parameter value.\n * @param parse - a custom value parser.\n * @see decodeBase64Url\n */\nexport function decodeStartParam<T>(value: string, parse: (value: string) => T): T;\n/**\n * Decodes a start parameter assuming that the result is a JSON value.\n * @param value - a start parameter value.\n * @param as - result kind.\n * @see decodeBase64Url\n */\nexport function decodeStartParam(value: string, as: 'json'): unknown;\n/**\n * Decodes a start parameter and returns its decoded representation.\n * @param value - a value to decode.\n * @see decodeBase64Url\n */\nexport function decodeStartParam(value: string): string;\nexport function decodeStartParam<T>(\n  value: string,\n  arg2?: 'json' | ((value: string) => T),\n): string | unknown | T {\n  const decoded = decodeBase64Url(value);\n  return arg2 === 'json'\n    ? JSON.parse(decoded)\n    : arg2\n      ? arg2(decoded)\n      : decoded;\n}","import { encodeBase64Url } from '@/base64-url/encodeBase64Url.js';\n\n/**\n * @returns True if the passed value is safe to be used to create a start parameter value from it.\n * If true is returned, the value can be safely passed to the `createStartParam` function.\n * @param value - value to check.\n * @see createStartParam\n */\nexport function isSafeToCreateStartParam(value: string): boolean {\n  return encodeBase64Url(value).length <= 512;\n}","import { AbortablePromise } from 'better-promises';\n\nimport { captureSameReq } from '@/methods/captureSameReq.js';\nimport type { CustomMethodName, CustomMethodParams } from '@/methods/types/index.js';\nimport { InvokeCustomMethodError } from '@/errors.js';\n\nimport { request, type RequestOptions } from './request.js';\n\nexport type InvokeCustomMethodOptions = Omit<RequestOptions<'custom_method_invoked'>, 'capture'>;\nexport type InvokeCustomMethodFn = typeof invokeCustomMethod;\n\n/**\n * Invokes known custom method. Returns method execution result.\n * @param method - method name.\n * @param params - method parameters.\n * @param requestId - request identifier.\n * @param options - additional options.\n * @throws {InvokeCustomMethodError} Invocation completed with some error.\n */\nexport function invokeCustomMethod<M extends CustomMethodName>(\n  method: M,\n  params: CustomMethodParams<M>,\n  requestId: string,\n  options?: InvokeCustomMethodOptions,\n): AbortablePromise<unknown>;\n\n/**\n * Invokes unknown custom method. Returns method execution result.\n * @param method - method name.\n * @param params - method parameters.\n * @param requestId - request identifier.\n * @param options - additional options.\n * @throws {InvokeCustomMethodError} Invocation completed with some error.\n */\nexport function invokeCustomMethod(\n  method: string,\n  params: object,\n  requestId: string,\n  options?: InvokeCustomMethodOptions,\n): AbortablePromise<unknown>;\n\nexport function invokeCustomMethod(\n  method: string,\n  params: object,\n  requestId: string,\n  options?: InvokeCustomMethodOptions,\n): AbortablePromise<unknown> {\n  return request('web_app_invoke_custom_method', 'custom_method_invoked', {\n    ...options || {},\n    params: { method, params, req_id: requestId },\n    capture: captureSameReq(requestId),\n  })\n    .then(({ result, error }) => {\n      if (error) {\n        throw new InvokeCustomMethodError(error);\n      }\n      return result;\n    });\n}\n","/**\n * Applies polyfills required for stable work of the package:\n * - `Object.hasOwn` - used by `valibot`\n */\nexport function applyPolyfills(): void {\n  if (!Object.hasOwn) {\n    Object.hasOwn = function(obj, prop) {\n      return Object.prototype.hasOwnProperty.call(obj, prop);\n    };\n  }\n}","import { targetOrigin } from '@/methods/targetOrigin.js';\nimport { setDebug } from '@/debug.js';\nimport { offAll } from '@/events/emitter.js';\nimport { postMessageImplementation } from '@/methods/postMessage.js';\n\n/**\n * Resets the package state. Normally, you don't use this function in your application.\n * We are using it only for test purposes.\n */\nexport function resetPackageState() {\n  offAll();\n  setDebug(false);\n  [postMessageImplementation, targetOrigin].forEach(s => {\n    s.unsubAll();\n    s.reset();\n  });\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}