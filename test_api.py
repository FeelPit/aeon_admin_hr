#!/usr/bin/env python3
"""
–¢–µ—Å—Ç–æ–≤—ã–π —Å–∫—Ä–∏–ø—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ API –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏
"""

import requests
import json

BASE_URL = "http://localhost:8000"

def test_health():
    """–¢–µ—Å—Ç –∑–¥–æ—Ä–æ–≤—å—è API"""
    try:
        response = requests.get(f"{BASE_URL}/health")
        print(f"Health check: {response.status_code}")
        if response.status_code == 200:
            print("‚úÖ API —Ä–∞–±–æ—Ç–∞–µ—Ç")
        else:
            print("‚ùå API –Ω–µ –æ—Ç–≤–µ—á–∞–µ—Ç")
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ API: {e}")

def test_telegram_auth_mock():
    """–¢–µ—Å—Ç –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏ —Å –º–æ–∫–æ–≤—ã–º–∏ –¥–∞–Ω–Ω—ã–º–∏"""
    # –ú–æ–∫–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ Telegram (–¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è)
    mock_init_data = "user=%7B%22id%22%3A123456789%2C%22first_name%22%3A%22Test%22%2C%22last_name%22%3A%22User%22%2C%22username%22%3A%22testuser%22%2C%22language_code%22%3A%22en%22%7D&auth_date=1234567890&hash=test_hash"
    
    try:
        response = requests.post(
            f"{BASE_URL}/api/telegram/telegram-auth",
            json={"init_data": mock_init_data},
            headers={"Content-Type": "application/json"}
        )
        
        print(f"Telegram auth test: {response.status_code}")
        if response.status_code == 200:
            data = response.json()
            print("‚úÖ –ê—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏—è —É—Å–ø–µ—à–Ω–∞")
            print(f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: {data.get('user', {}).get('name', 'N/A')}")
            print(f"–ê–¥–º–∏–Ω: {data.get('user', {}).get('is_admin', False)}")
            return data.get('access_token')
        else:
            print(f"‚ùå –û—à–∏–±–∫–∞ –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏: {response.text}")
            return None
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –∑–∞–ø—Ä–æ—Å–∞: {e}")
        return None

def test_profile(token):
    """–¢–µ—Å—Ç –ø–æ–ª—É—á–µ–Ω–∏—è –ø—Ä–æ—Ñ–∏–ª—è"""
    if not token:
        print("‚ùå –ù–µ—Ç —Ç–æ–∫–µ–Ω–∞ –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –ø—Ä–æ—Ñ–∏–ª—è")
        return
    
    try:
        response = requests.get(
            f"{BASE_URL}/api/telegram/profile",
            headers={"Authorization": f"Bearer {token}"}
        )
        
        print(f"Profile test: {response.status_code}")
        if response.status_code == 200:
            data = response.json()
            print("‚úÖ –ü—Ä–æ—Ñ–∏–ª—å –ø–æ–ª—É—á–µ–Ω")
            print(f"–ò–º—è: {data.get('name', 'N/A')}")
            print(f"Telegram ID: {data.get('telegram_id', 'N/A')}")
            print(f"–ê–¥–º–∏–Ω: {data.get('is_admin', False)}")
        else:
            print(f"‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –ø—Ä–æ—Ñ–∏–ª—è: {response.text}")
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –∑–∞–ø—Ä–æ—Å–∞ –ø—Ä–æ—Ñ–∏–ª—è: {e}")

def test_admins(token):
    """–¢–µ—Å—Ç –ø–æ–ª—É—á–µ–Ω–∏—è —Å–ø–∏—Å–∫–∞ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–≤"""
    if not token:
        print("‚ùå –ù–µ—Ç —Ç–æ–∫–µ–Ω–∞ –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–≤")
        return
    
    try:
        response = requests.get(
            f"{BASE_URL}/api/telegram/admins",
            headers={"Authorization": f"Bearer {token}"}
        )
        
        print(f"Admins test: {response.status_code}")
        if response.status_code == 200:
            data = response.json()
            print("‚úÖ –°–ø–∏—Å–æ–∫ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–≤ –ø–æ–ª—É—á–µ–Ω")
            for admin in data.get('admins', []):
                print(f"  - {admin.get('name', 'N/A')} (@{admin.get('telegram_username', 'N/A')})")
        else:
            print(f"‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–≤: {response.text}")
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –∑–∞–ø—Ä–æ—Å–∞ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–≤: {e}")

def main():
    print("üß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ API –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏")
    print("=" * 50)
    
    # –¢–µ—Å—Ç –∑–¥–æ—Ä–æ–≤—å—è API
    test_health()
    print()
    
    # –¢–µ—Å—Ç –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏
    token = test_telegram_auth_mock()
    print()
    
    if token:
        # –¢–µ—Å—Ç –ø—Ä–æ—Ñ–∏–ª—è
        test_profile(token)
        print()
        
        # –¢–µ—Å—Ç –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–≤
        test_admins(token)
        print()
    
    print("üèÅ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ")

if __name__ == "__main__":
    main() 