#!/bin/bash

# üõë –û—Å—Ç–∞–Ω–æ–≤–∫–∞ HR Admin System —Å Docker –∏ Cloudflare Tunnel

# –¶–≤–µ—Ç–∞ –¥–ª—è –≤—ã–≤–æ–¥–∞
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
NC='\033[0m' # No Color

# –§—É–Ω–∫—Ü–∏–∏ –¥–ª—è –≤—ã–≤–æ–¥–∞
print_info() {
    echo -e "${BLUE}‚ÑπÔ∏è  $1${NC}"
}

print_success() {
    echo -e "${GREEN}‚úÖ $1${NC}"
}

print_warning() {
    echo -e "${YELLOW}‚ö†Ô∏è  $1${NC}"
}

print_error() {
    echo -e "${RED}‚ùå $1${NC}"
}

print_header() {
    echo -e "${BLUE}üõë $1${NC}"
}

# –û—Å—Ç–∞–Ω–æ–≤–∫–∞ Cloudflare Tunnel
stop_cloudflare_tunnel() {
    print_header "–û—Å—Ç–∞–Ω–æ–≤–∫–∞ Cloudflare Tunnel..."
    
    if [ -f ".cloudflared.pid" ]; then
        local tunnel_pid=$(cat .cloudflared.pid)
        if kill -0 $tunnel_pid 2>/dev/null; then
            kill $tunnel_pid
            print_success "Cloudflare Tunnel –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω (PID: $tunnel_pid)"
        else
            print_warning "Cloudflare Tunnel —É–∂–µ –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω"
        fi
        rm -f .cloudflared.pid
    else
        print_info "Cloudflare Tunnel –Ω–µ –∑–∞–ø—É—â–µ–Ω"
    fi
}

# –û—Å—Ç–∞–Ω–æ–≤–∫–∞ Docker –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤
stop_docker_containers() {
    print_header "–û—Å—Ç–∞–Ω–æ–≤–∫–∞ Docker –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤..."
    
    if docker-compose ps | grep -q "Up"; then
        docker-compose down
        print_success "Docker –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä—ã –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã"
    else
        print_info "Docker –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä—ã —É–∂–µ –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã"
    fi
}

# –û—á–∏—Å—Ç–∫–∞ —Ä–µ—Å—É—Ä—Å–æ–≤
cleanup_resources() {
    print_header "–û—á–∏—Å—Ç–∫–∞ —Ä–µ—Å—É—Ä—Å–æ–≤..."
    
    # –£–¥–∞–ª–µ–Ω–∏–µ –Ω–µ–∏—Å–ø–æ–ª—å–∑—É–µ–º—ã—Ö –æ–±—Ä–∞–∑–æ–≤ (–æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ)
    read -p "–£–¥–∞–ª–∏—Ç—å –Ω–µ–∏—Å–ø–æ–ª—å–∑—É–µ–º—ã–µ Docker –æ–±—Ä–∞–∑—ã? (y/N): " -n 1 -r
    echo
    if [[ $REPLY =~ ^[Yy]$ ]]; then
        docker image prune -f
        print_success "–ù–µ–∏—Å–ø–æ–ª—å–∑—É–µ–º—ã–µ –æ–±—Ä–∞–∑—ã —É–¥–∞–ª–µ–Ω—ã"
    fi
    
    # –£–¥–∞–ª–µ–Ω–∏–µ –Ω–µ–∏—Å–ø–æ–ª—å–∑—É–µ–º—ã—Ö —Ç–æ–º–æ–≤ (–æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ)
    read -p "–£–¥–∞–ª–∏—Ç—å –Ω–µ–∏—Å–ø–æ–ª—å–∑—É–µ–º—ã–µ Docker —Ç–æ–º–∞? (y/N): " -n 1 -r
    echo
    if [[ $REPLY =~ ^[Yy]$ ]]; then
        docker volume prune -f
        print_success "–ù–µ–∏—Å–ø–æ–ª—å–∑—É–µ–º—ã–µ —Ç–æ–º–∞ —É–¥–∞–ª–µ–Ω—ã"
    fi
}

# –û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è
main() {
    print_header "–û—Å—Ç–∞–Ω–æ–≤–∫–∞ HR Admin System"
    
    # –û—Å—Ç–∞–Ω–æ–≤–∫–∞ Cloudflare Tunnel
    stop_cloudflare_tunnel
    
    # –û—Å—Ç–∞–Ω–æ–≤–∫–∞ Docker –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤
    stop_docker_containers
    
    # –û—á–∏—Å—Ç–∫–∞ —Ä–µ—Å—É—Ä—Å–æ–≤
    cleanup_resources
    
    print_success "üéâ –°–∏—Å—Ç–µ–º–∞ –ø–æ–ª–Ω–æ—Å—Ç—å—é –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞!"
    print_info "–î–ª—è –∑–∞–ø—É—Å–∫–∞ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ: ./start-full-docker.sh"
}

# –ó–∞–ø—É—Å–∫ –æ—Å–Ω–æ–≤–Ω–æ–π —Ñ—É–Ω–∫—Ü–∏–∏
main "$@" 