#!/usr/bin/env python3
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ—Å—Ç–∏ –æ–∂–∏–¥–∞—é—â–∏—Ö –∞–¥–º–∏–Ω–æ–≤
"""

import requests
import json
import time

BASE_URL = "http://localhost:8001"

def test_pending_admins():
    print("üß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ—Å—Ç–∏ –æ–∂–∏–¥–∞—é—â–∏—Ö –∞–¥–º–∏–Ω–æ–≤")
    print("=" * 50)
    
    # 1. –°–æ–∑–¥–∞–µ–º –ø–µ—Ä–≤–æ–≥–æ –∞–¥–º–∏–Ω–∞ (—Å–∏–º—É–ª–∏—Ä—É–µ–º –≤—Ö–æ–¥ —á–µ—Ä–µ–∑ Telegram)
    print("\n1. –°–æ–∑–¥–∞–Ω–∏–µ –ø–µ—Ä–≤–æ–≥–æ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞...")
    
    # –°–∏–º—É–ª–∏—Ä—É–µ–º Telegram init_data
    init_data = "user=%7B%22id%22%3A123456789%2C%22first_name%22%3A%22Test%22%2C%22last_name%22%3A%22Admin%22%2C%22username%22%3A%22testadmin%22%7D&auth_date=1234567890&hash=test_hash"
    
    auth_response = requests.post(f"{BASE_URL}/api/telegram/telegram-auth", json={
        "init_data": init_data
    })
    
    if auth_response.status_code == 200:
        auth_data = auth_response.json()
        token = auth_data["access_token"]
        print(f"‚úÖ –ü–µ—Ä–≤—ã–π –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä —Å–æ–∑–¥–∞–Ω: {auth_data['user']['name']}")
        print(f"   Token: {token[:20]}...")
    else:
        print(f"‚ùå –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è –ø–µ—Ä–≤–æ–≥–æ –∞–¥–º–∏–Ω–∞: {auth_response.status_code}")
        print(f"   Response: {auth_response.text}")
        return
    
    # 2. –î–æ–±–∞–≤–ª—è–µ–º –æ–∂–∏–¥–∞—é—â–µ–≥–æ –∞–¥–º–∏–Ω–∞ (–∏—Å–ø–æ–ª—å–∑—É–µ–º –¥—Ä—É–≥–æ–π username)
    print("\n2. –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –æ–∂–∏–¥–∞—é—â–µ–≥–æ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞...")
    
    pending_response = requests.post(f"{BASE_URL}/api/telegram/create-admin", 
        json={"telegram_username": "futureadmin"},
        headers={"Authorization": f"Bearer {token}"}
    )
    
    if pending_response.status_code == 200:
        pending_data = pending_response.json()
        print(f"‚úÖ –û–∂–∏–¥–∞—é—â–∏–π –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä –¥–æ–±–∞–≤–ª–µ–Ω: {pending_data['message']}")
    else:
        print(f"‚ùå –û—à–∏–±–∫–∞ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –æ–∂–∏–¥–∞—é—â–µ–≥–æ –∞–¥–º–∏–Ω–∞: {pending_response.status_code}")
        print(f"   Response: {pending_response.text}")
        return
    
    # 3. –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å–ø–∏—Å–æ–∫ –æ–∂–∏–¥–∞—é—â–∏—Ö –∞–¥–º–∏–Ω–æ–≤
    print("\n3. –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–ø–∏—Å–∫–∞ –æ–∂–∏–¥–∞—é—â–∏—Ö –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–≤...")
    
    pending_list_response = requests.get(f"{BASE_URL}/api/telegram/pending-admins",
        headers={"Authorization": f"Bearer {token}"}
    )
    
    if pending_list_response.status_code == 200:
        pending_list = pending_list_response.json()
        print(f"‚úÖ –°–ø–∏—Å–æ–∫ –æ–∂–∏–¥–∞—é—â–∏—Ö –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–≤ –ø–æ–ª—É—á–µ–Ω:")
        for pending in pending_list["pending_admins"]:
            print(f"   - @{pending['telegram_username']} (–¥–æ–±–∞–≤–ª–µ–Ω: {pending['created_at']})")
    else:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è —Å–ø–∏—Å–∫–∞ –æ–∂–∏–¥–∞—é—â–∏—Ö: {pending_list_response.status_code}")
        print(f"   Response: {pending_list_response.text}")
    
    # 4. –°–∏–º—É–ª–∏—Ä—É–µ–º –≤—Ö–æ–¥ –æ–∂–∏–¥–∞—é—â–µ–≥–æ –∞–¥–º–∏–Ω–∞
    print("\n4. –°–∏–º—É–ª—è—Ü–∏—è –≤—Ö–æ–¥–∞ –æ–∂–∏–¥–∞—é—â–µ–≥–æ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞...")
    
    # –°–∏–º—É–ª–∏—Ä—É–µ–º Telegram init_data –¥–ª—è –æ–∂–∏–¥–∞—é—â–µ–≥–æ –∞–¥–º–∏–Ω–∞
    new_init_data = "user=%7B%22id%22%3A987654321%2C%22first_name%22%3A%22Future%22%2C%22last_name%22%3A%22Admin%22%2C%22username%22%3A%22futureadmin%22%7D&auth_date=1234567890&hash=test_hash"
    
    new_auth_response = requests.post(f"{BASE_URL}/api/telegram/telegram-auth", json={
        "init_data": new_init_data
    })
    
    if new_auth_response.status_code == 200:
        new_auth_data = new_auth_response.json()
        print(f"‚úÖ –û–∂–∏–¥–∞—é—â–∏–π –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä —É—Å–ø–µ—à–Ω–æ –≤–æ—à–µ–ª: {new_auth_data['user']['name']}")
        print(f"   –°—Ç–∞—Ç—É—Å –∞–¥–º–∏–Ω–∞: {new_auth_data['user']['is_admin']}")
    else:
        print(f"‚ùå –û—à–∏–±–∫–∞ –≤—Ö–æ–¥–∞ –æ–∂–∏–¥–∞—é—â–µ–≥–æ –∞–¥–º–∏–Ω–∞: {new_auth_response.status_code}")
        print(f"   Response: {new_auth_response.text}")
    
    # 5. –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –æ–∂–∏–¥–∞—é—â–∏–π –∞–¥–º–∏–Ω –∏—Å—á–µ–∑ –∏–∑ —Å–ø–∏—Å–∫–∞
    print("\n5. –ü—Ä–æ–≤–µ—Ä–∫–∞, —á—Ç–æ –æ–∂–∏–¥–∞—é—â–∏–π –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä –∏—Å—á–µ–∑ –∏–∑ —Å–ø–∏—Å–∫–∞...")
    
    time.sleep(1)  # –ù–µ–±–æ–ª—å—à–∞—è –∑–∞–¥–µ—Ä–∂–∫–∞
    
    final_pending_response = requests.get(f"{BASE_URL}/api/telegram/pending-admins",
        headers={"Authorization": f"Bearer {token}"}
    )
    
    if final_pending_response.status_code == 200:
        final_pending_list = final_pending_response.json()
        if len(final_pending_list["pending_admins"]) == 0:
            print("‚úÖ –û–∂–∏–¥–∞—é—â–∏–π –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä —É—Å–ø–µ—à–Ω–æ —É–¥–∞–ª–µ–Ω –∏–∑ —Å–ø–∏—Å–∫–∞ –æ–∂–∏–¥–∞—é—â–∏—Ö")
        else:
            print(f"‚ùå –û–∂–∏–¥–∞—é—â–∏–π –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä –≤—Å–µ –µ—â–µ –≤ —Å–ø–∏—Å–∫–µ: {final_pending_list}")
    else:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ —Ñ–∏–Ω–∞–ª—å–Ω–æ–≥–æ —Å–ø–∏—Å–∫–∞: {final_pending_response.status_code}")
    
    # 6. –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å–ø–∏—Å–æ–∫ –≤—Å–µ—Ö –∞–¥–º–∏–Ω–æ–≤
    print("\n6. –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–ø–∏—Å–∫–∞ –≤—Å–µ—Ö –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–≤...")
    
    admins_response = requests.get(f"{BASE_URL}/api/telegram/admins",
        headers={"Authorization": f"Bearer {token}"}
    )
    
    if admins_response.status_code == 200:
        admins_list = admins_response.json()
        print(f"‚úÖ –°–ø–∏—Å–æ–∫ –≤—Å–µ—Ö –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–≤:")
        for admin in admins_list["admins"]:
            print(f"   - {admin['name']} (@{admin['telegram_username']}) - {'–ê–¥–º–∏–Ω' if admin['is_admin'] else '–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å'}")
    else:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è —Å–ø–∏—Å–∫–∞ –∞–¥–º–∏–Ω–æ–≤: {admins_response.status_code}")
    
    print("\n" + "=" * 50)
    print("üéâ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ!")

if __name__ == "__main__":
    try:
        test_pending_admins()
    except requests.exceptions.ConnectionError:
        print("‚ùå –ù–µ —É–¥–∞–µ—Ç—Å—è –ø–æ–¥–∫–ª—é—á–∏—Ç—å—Å—è –∫ —Å–µ—Ä–≤–µ—Ä—É. –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ –±—ç–∫–µ–Ω–¥ –∑–∞–ø—É—â–µ–Ω –Ω–∞ http://localhost:8001")
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è: {e}") 