#!/bin/bash

# üöÄ –°–∫—Ä–∏–ø—Ç –¥–ª—è –¥–µ–ø–ª–æ—è –Ω–∞ Railway
# –ê–≤—Ç–æ—Ä: AI Assistant
# –í–µ—Ä—Å–∏—è: 1.0

set -e

echo "üöÄ –ù–∞—á–∏–Ω–∞–µ–º –¥–µ–ø–ª–æ–π –Ω–∞ Railway..."

# –¶–≤–µ—Ç–∞ –¥–ª—è –≤—ã–≤–æ–¥–∞
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
NC='\033[0m' # No Color

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –≤—ã–≤–æ–¥–∞ —Å —Ü–≤–µ—Ç–æ–º
print_status() {
    echo -e "${BLUE}[INFO]${NC} $1"
}

print_success() {
    echo -e "${GREEN}[SUCCESS]${NC} $1"
}

print_warning() {
    echo -e "${YELLOW}[WARNING]${NC} $1"
}

print_error() {
    echo -e "${RED}[ERROR]${NC} $1"
}

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π
check_dependencies() {
    print_status "–ü—Ä–æ–≤–µ—Ä—è–µ–º –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏..."
    
    if ! command -v git &> /dev/null; then
        print_error "Git –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω. –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ Git –∏ –ø–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞."
        exit 1
    fi
    
    if ! command -v docker &> /dev/null; then
        print_warning "Docker –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω. –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ Docker –¥–ª—è –ª–æ–∫–∞–ª—å–Ω–æ–≥–æ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è."
    fi
    
    print_success "–ó–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –ø—Ä–æ–≤–µ—Ä–µ–Ω—ã"
}

# –ü—Ä–æ–≤–µ—Ä–∫–∞ Git —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏—è
check_git_repo() {
    print_status "–ü—Ä–æ–≤–µ—Ä—è–µ–º Git —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–π..."
    
    if [ ! -d ".git" ]; then
        print_error "–≠—Ç–æ –Ω–µ Git —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–π. –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–π—Ç–µ Git:"
        echo "  git init"
        echo "  git add ."
        echo "  git commit -m 'Initial commit'"
        exit 1
    fi
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ —É–¥–∞–ª–µ–Ω–Ω—ã–π —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–π
    if ! git remote get-url origin &> /dev/null; then
        print_warning "–£–¥–∞–ª–µ–Ω–Ω—ã–π —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–π –Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω."
        echo "–°–æ–∑–¥–∞–π—Ç–µ —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–π –Ω–∞ GitHub –∏ –¥–æ–±–∞–≤—å—Ç–µ –µ–≥–æ:"
        echo "  git remote add origin https://github.com/YOUR_USERNAME/YOUR_REPO.git"
        echo "  git push -u origin main"
        exit 1
    fi
    
    print_success "Git —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–π –Ω–∞—Å—Ç—Ä–æ–µ–Ω"
}

# –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ñ–∞–π–ª–æ–≤ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏
check_config_files() {
    print_status "–ü—Ä–æ–≤–µ—Ä—è–µ–º —Ñ–∞–π–ª—ã –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏..."
    
    required_files=("railway.json" "Dockerfile" "backend/requirements.txt" "frontend/package.json")
    
    for file in "${required_files[@]}"; do
        if [ ! -f "$file" ]; then
            print_error "–§–∞–π–ª $file –Ω–µ –Ω–∞–π–¥–µ–Ω"
            exit 1
        fi
    done
    
    print_success "–í—Å–µ —Ñ–∞–π–ª—ã –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ –Ω–∞–π–¥–µ–Ω—ã"
}

# –õ–æ–∫–∞–ª—å–Ω–æ–µ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ Docker
test_docker_build() {
    if command -v docker &> /dev/null; then
        print_status "–¢–µ—Å—Ç–∏—Ä—É–µ–º Docker —Å–±–æ—Ä–∫—É..."
        
        if docker build -t hr-admin-test . &> /dev/null; then
            print_success "Docker —Å–±–æ—Ä–∫–∞ —É—Å–ø–µ—à–Ω–∞"
        else
            print_warning "Docker —Å–±–æ—Ä–∫–∞ –Ω–µ —É–¥–∞–ª–∞—Å—å. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ Dockerfile"
        fi
    fi
}

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –∏–∑–º–µ–Ω–µ–Ω–∏–π
check_changes() {
    print_status "–ü—Ä–æ–≤–µ—Ä—è–µ–º –∏–∑–º–µ–Ω–µ–Ω–∏—è –≤ —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–∏..."
    
    if [ -n "$(git status --porcelain)" ]; then
        print_warning "–ï—Å—Ç—å –Ω–µ—Å–æ—Ö—Ä–∞–Ω–µ–Ω–Ω—ã–µ –∏–∑–º–µ–Ω–µ–Ω–∏—è:"
        git status --short
        
        read -p "–•–æ—Ç–∏—Ç–µ –∑–∞–∫–æ–º–º–∏—Ç–∏—Ç—å –∏–∑–º–µ–Ω–µ–Ω–∏—è? (y/n): " -n 1 -r
        echo
        if [[ $REPLY =~ ^[Yy]$ ]]; then
            git add .
            git commit -m "Update for Railway deployment"
            print_success "–ò–∑–º–µ–Ω–µ–Ω–∏—è –∑–∞–∫–æ–º–º–∏—á–µ–Ω—ã"
        fi
    else
        print_success "–í—Å–µ –∏–∑–º–µ–Ω–µ–Ω–∏—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã"
    fi
}

# –û—Ç–ø—Ä–∞–≤–∫–∞ –≤ GitHub
push_to_github() {
    print_status "–û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∏–∑–º–µ–Ω–µ–Ω–∏—è –≤ GitHub..."
    
    if git push origin main; then
        print_success "–ö–æ–¥ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω –≤ GitHub"
    else
        print_error "–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ –≤ GitHub"
        exit 1
    fi
}

# –ò–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏ –ø–æ –¥–µ–ø–ª–æ—é
show_deploy_instructions() {
    echo
    echo "üéØ –°–õ–ï–î–£–Æ–©–ò–ï –®–ê–ì–ò –î–õ–Ø –î–ï–ü–õ–û–Ø:"
    echo
    echo "1. üì± –û—Ç–∫—Ä–æ–π—Ç–µ Railway Dashboard:"
    echo "   https://railway.app"
    echo
    echo "2. üöÄ –°–æ–∑–¥–∞–π—Ç–µ –Ω–æ–≤—ã–π –ø—Ä–æ–µ–∫—Ç:"
    echo "   - –ù–∞–∂–º–∏—Ç–µ 'Start a New Project'"
    echo "   - –í—ã–±–µ—Ä–∏—Ç–µ 'Deploy from GitHub repo'"
    echo "   - –ü–æ–¥–∫–ª—é—á–∏—Ç–µ –≤–∞—à GitHub –∞–∫–∫–∞—É–Ω—Ç"
    echo "   - –í—ã–±–µ—Ä–∏—Ç–µ —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–π: $(basename $(git remote get-url origin) .git)"
    echo
    echo "3. üóÑÔ∏è –î–æ–±–∞–≤—å—Ç–µ –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö:"
    echo "   - –í –ø—Ä–æ–µ–∫—Ç–µ –Ω–∞–∂–º–∏—Ç–µ 'New'"
    echo "   - –í—ã–±–µ—Ä–∏—Ç–µ 'Database' ‚Üí 'PostgreSQL'"
    echo
    echo "4. ‚öôÔ∏è –ù–∞—Å—Ç—Ä–æ–π—Ç–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è:"
    echo "   - SECRET_KEY=your-super-secret-key-here"
    echo "   - BOT_TOKEN= (–µ—Å–ª–∏ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç–µ Telegram)"
    echo
    echo "5. üöÄ –î–µ–ø–ª–æ–π:"
    echo "   - Railway –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –æ–±–Ω–∞—Ä—É–∂–∏—Ç railway.json –∏ Dockerfile"
    echo "   - –ù–∞–∂–º–∏—Ç–µ 'Deploy Now'"
    echo
    echo "6. üéâ –ü–æ–ª—É—á–∏—Ç–µ –¥–æ—Å—Ç—É–ø:"
    echo "   - URL: https://your-app-name.railway.app"
    echo "   - –õ–æ–≥–∏–Ω: admin@example.com"
    echo "   - –ü–∞—Ä–æ–ª—å: admin123"
    echo
    echo "üìö –ü–æ–¥—Ä–æ–±–Ω–∞—è –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—è: RAILWAY_DEPLOY.md"
}

# –û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è
main() {
    echo "üöÄ HR Admin System - Railway Deploy Script"
    echo "=========================================="
    echo
    
    check_dependencies
    check_git_repo
    check_config_files
    test_docker_build
    check_changes
    push_to_github
    show_deploy_instructions
    
    echo
    print_success "–°–∫—Ä–∏–ø—Ç –∑–∞–≤–µ—Ä—à–µ–Ω —É—Å–ø–µ—à–Ω–æ! üéâ"
}

# –ó–∞–ø—É—Å–∫ —Å–∫—Ä–∏–ø—Ç–∞
main "$@" 